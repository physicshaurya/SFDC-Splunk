// The below section is JS code for the context menu options.
// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// The onClicked callback function.


chrome.contextMenus.onClicked.addListener(onClickHandler);

// Set up context menu tree at install time.
chrome.runtime.onInstalled.addListener(function() {
  // Create one test item for each context type.
  var contexts = ["selection"];
  for (var i = 0; i < contexts.length; i++) {
    var context = contexts[i];
    var selected = "\"%s\"";
    var title = "Search Splunk resources for " + selected;
    var id = chrome.contextMenus.create({
        "title": title, 
        "contexts":[context],
        "id": "context" + context,
        "documentUrlPatterns": [
        'https://splunk-web.crz.salesforce.com/*'
        ]
    });
    console.log("'" + context + "' item:" + id);
  }

});

function remex(tabId, func,callback) {
    chrome.tabs.executeScript(tabId,{ code: '('+func.toString()+')()' },callback);
}

function onClickHandler(clickData, tab) {
    var recordTypeArray = [
        ['logRecordType','Class','Description'],
        ['basic','Basic','minimum fields of common log records.'],
        ['G','BaseGack','minimum fields for gack records'],
        ['X','Undefined','all undefined log records'],
        ['y','OutboundEmail','Email log data, new as of 158'],
        ['gslog','BaseSuppressedGack','Suppressed Gacks: suppressed gack records'],
        ['gglog','BaseLogOnlyGack','Log-only Gacks: minimum fields for log-only gacks'],
        ['emblk','BlockedOutboundEmail','Email: Blocked Email log data for orgs with no email access.'],
        ['jphnd','JDWPProxyHandshake','JDWP Proxy: a handshake frame'],
        ['jpcmd','JDWPProxyCommand','JDWP Proxy: a command packet'],
        ['jprpl','JDWPProxyReply','JDWP Proxy: a reply packet'],
        ['common','Common','Common log record type, most other types derive from this'],
        ['7','Agent','not in use by core, not covered in version 1 of this doc'],
        ['a','ApexSoap','ApexCode Web Services API logs are created for API requests to Apex Code packages with the following data. (aka PL/SOAP aka Apex-WS aka WS-Apex)'],
        ['A','API','API logs are created for API requests'],
        ['D','DashBoard','Dashboard logs are created for reporting requests used in Dashboards'],
        ['d','DocumentMerge','Document Merge Task logging information'],
        ['F','ForecastRecalc','Forecast Recalculation event manager logoggin information'],
        ['H','Help','Help requests'],
        ['basesearchqueue','BaseSearchQueue','Common search queue fields.'],
        ['K','WorkflowDeprecated','@deprecated'],
        ['k','Workflow','Workflow controller logs'],
        ['L','Login','All login logs are created with the following data. L records for Web Logins have null for user and null org IDs; L records for SOAP have real user and org IDs; L records for XML-RPC have a mix of null and not null for user and org IDs'],
        ['M','Monitor','not in use by core, not covered in version 1 of this doc'],
        ['N','WorkflowOutbound','These log entries are created for SOAP outbound requests that are triggered by workflow.'],
        ['O','Outbound','Outbound logs are created for SOAP outbound requests. (This is only used by Cisco)'],
        ['o','SfdcOutbound','Internal Workflow Based Outbound Messaging'],
        ['searchQueryPrefilteringBasic','SearchQueryPrefilteringBasic','Common search prefilter information/metrics'],
        ['searchsnippetsbasic','SearchSnippetsBasic','Common search snippet request fields.'],
        ['searchquerybasic','SearchQueryBasic','Common search query fields.'],
        ['searchqueryextended','SearchQueryExtended','Extended common search query fields.'],
        ['Q','SearchQuery','Log search queries.'],
        ['5','SearchQuerySharingTime','Log search query sharing check timing information.'],
        ['searchIndexBackup','SearchIndexBackup','Logs for index backup messages'],
        ['basePerSolrServerSystemJob','BasePerSolrServerSystemJob','The base log record for jobs that extend BasePerSolrServerSystemJob to run against all Solr servers'],
        ['basePerSolrIndexSystemJob','BasePerSolrIndexSystemJob','The base log record for jobs that extend BasePerSolrIndexSystemJob to run against each Solr index from the DB metadata'],
        ['basePerSolrCoreSystemJob','BasePerSolrCoreSystemJob','The base log record for jobs that extend BasePerSolrCoreSystemJob to run against each Solr core from the DB metadata'],
        ['basechangequeuemonitor','BaseChangeQueueMonitor','Common change queue monitor fields (see ChangeQueueMonitorSystemJob).'],
        ['s','StatisticPersistence','Persistence for statistic values'],
        ['R','Report','Reporting logs are created for reporting requests'],
        ['U','URI','URI logs are the default log formats used for all online requests and if another log format is not applicable for that log entry.'],
        ['W','Web','Web records are for SOAP operations.'],
        ['P','Picklist','not in use by core, not covered in version 1 of this doc'],
        ['T','Task','Scheduler tasks are created for each ScheduledTask.'],
        ['E','TerritoryRealign','not in use by core'],
        ['S','Download','Log records for GenericDocumentServer, FileDownload. See also: ContentTransfer for Content downloads/uploads'],
        ['C','ApiCursorServer','Api cursor file servlet logs'],
        ['f','FileForceServer','FileForce file servlet logs'],
        ['Y','SoslSearch','Google SOSL Search Servlet requests'],
        ['2','EmailToCase','Email to case logs are created during every call to EmailHandler.handleIncomingEmails. The Routing Address and Email Address will often be blank if routing addresses are not being used or if a Routing Address was not matched. Email-To-Case log entries are child log entries resulting from a handleEmailMessage API call.'],
        ['p','RemoteProxy','Remote Proxy logs are created during every call to ProxyServlet.service().'],
        ['e','Email','Email logs, this is an improperly formatted log line containing \':\' where it should not'],
        ['apexbatchcommon','ApexBatchCommon','Common log record type for batch apex log records'],
        ['t','ApexTrigger','Apex triggers'],
        ['v','ReportCSVExport','logs of CSV exports of reports'],
        ['b','MailCatcher','Mailcatcher records for inbound workflow approval, email-to-apex, and bounce emails'],
        ['Z','SummaryField','all summary field log records'],
        ['m','MassEmails','The Mass Mail Batch process (running on the batch servers) creates these log records. When the mass mail batch processor has completed sending all the emails for the request, it will write this log record. This log record contains the number of recipients the mass mail was sent to.'],
        ['B','ApprovalProcess','This log record is created by the Approval Process Engine every time a record is submitted for approval or an Approve or Reject action is taken.'],
        ['V','VisualforceRequest','This log record is created every time a Visualforce request is made. Requests can originate from the UI or the API.'],
        ['c','VisualForceCompiler','This log record is created every time an attempt to save a Visualforce page or component is made.'],
        ['l','SControl','This log record is created every time an Scontrol request is made.'],
        ['r','AnalyticSnapshot','This log record is created every time an analytic snapshot is run.'],
        ['u','UiConcurrentLimit','concurrent web requests limit violation logs'],
        ['h','Captcha','captcha verification failures'],
        ['g','HeapSize','reports heap size statistics'],
        ['n','LookupAutoComplete','reports lookup auto-complete usage.'],
        ['w','TagBrowser','reports tag browser usage'],
        ['j','Lookup','reports lookup executions.'],
        ['z','ValidationLogger','violations of output escaping'],
        ['J','Sites','Site specific logging'],
        ['picasso','Picasso','minimum fields of picasso log records.'],
        ['i','UIPerf','UIPerf log data generated by client-side JavaScript timings.'],
        ['3','AppPage','Page specific logging'],
        ['0','ApiLoginProxy','Logging for DSI login proxies for API'],
        ['8','SfoMatch','sfoMatch logging'],
        ['9','AssociationQueue','Association Queue logging'],
        ['6','CloudScheduler','Cloud Scheduler logging'],
        ['1','ScrutinyTaskOutput','Scrutiny Results'],
        ['4','Siteforce','Siteforce specific logging'],
        ['rypple','Rypple','minimum fields of rypple log records.'],
        ['CoreOptimizer','CoreOptimizer','Minimum records in Core Optimizer LogRecord.'],
        ['perorgcommon','PerOrgCommon','Common log record type for per-org job records'],
        ['sdusa','ServiceDesk','Service Desk: Service Desk logging usage'],
        ['sdcwc','ServiceDeskCWC','Service Desk: Service Desk logs of custom workspace components (components at the primary tab level).'],
        ['sdcsc','ServiceDeskCSC','Service Desk: Service Desk logs of custom sidebar components (components at the subtab level).'],
        ['sdccc','ServiceDeskCCC','Service Desk: Service Desk logs of console footer components.'],
        ['ctusa','Cti','CTI: CTI logging usage'],
        ['iamin','IdeasBase','Ideas and Ideas Theme: Ideas logging base'],
        ['iaidc','IdeasCreated','Ideas and Ideas Theme: Ideas log when new idea is created'],
        ['iaitc','IdeasThemeCreated','Ideas and Ideas Theme: Ideas log when new idea is created'],
        ['iaicc','IdeasCommentCreated','Ideas and Ideas Theme: Ideas log when new idea is created'],
        ['iaivc','IdeasVoteCreated','Ideas and Ideas Theme: Ideas log when new idea is created'],
        ['spmin','ServiceCloudCommunities','Service Cloud Communities: Chatter Service logging base'],
        ['spasi','ServiceCloudCommunitiesArticleSingleItemView','Service Cloud Communities: Chatter Service log when Article title or Article date is clicked'],
        ['spqsi','ServiceCloudCommunitiesQuestionSingleItemView','Service Cloud Communities: Chatter Service log when question date is clicked'],
        ['spufc','ServiceCloudCommunitiesUsefulOrFollow','Service Cloud Communities: Chatter Service log when useful or follow is clicked'],
        ['spunf','ServiceCloudCommunitiesUnfollow','Service Cloud Communities: Chatter Service log when unfollow is clicked'],
        ['sprvc','ServiceCloudCommunitiesReplyVote','Service Cloud Communities: Chatter Service log when user vote up or down'],
        ['spauf','ServiceCloudCommunitiesArticleUseful','Service Cloud Communities: Chatter Service log when article useful is clicked'],
        ['spsba','ServiceCloudCommunitiesSelectBestAnswer','Service Cloud Communities: Chatter Service log when user selects best answer'],
        ['sptpc','ServiceCloudCommunitiesSelectTopic','Service Cloud Communities: Chatter Service log when user selects topic'],
        ['spftc','ServiceCloudCommunitiesSelectFilter','Service Cloud Communities: Chatter Service log when filter is clicked'],
        ['spstc','ServiceCloudCommunitiesSelectSort','Service Cloud Communities: Chatter Service log when sorting is clicked'],
        ['spmqc','ServiceCloudCommunitiesMyQuestions','Service Cloud Communities: Chatter Service log when My Questions link is clicked'],
        ['sppqc','ServiceCloudCommunitiesQuestionCreated','Service Cloud Communities: Chatter Service log when question is created'],
        ['spanc','ServiceCloudCommunitiesReplyCreated','Service Cloud Communities: Chatter Service log when answer is created'],
        ['spser','ServiceCloudCommunitiesSearch','Service Cloud Communities: Chatter Service log when search is made'],
        ['spsrc','ServiceCloudCommunitiesSearchResultClicked','Service Cloud Communities: Chatter Service log when search result is clicked'],
        ['spcon','ServiceCloudCommunitiesContinue','Service Cloud Communities: Chatter Service log when continue button is clicked'],
        ['spssc','ServiceCloudCommunitiesSecondPageSearch','Service Cloud Communities: Chatter Service log when search button is clicked on second page of Search/Ask flow'],
        ['spscc','ServiceCloudCommunitiesSecondPageCancel','Service Cloud Communities: Chatter Service log when cancel button is clicked on second page of Search/Ask flow'],
        ['spfld','ServiceCloudCommunitiesFeedLoaded','Service Cloud Communities: Chatter Service log for page view'],
        ['spsto','ServiceCloudCommunitiesSessionTimeout','Service Cloud Communities: Chatter Service log when action is performed but session time out'],
        ['spnli','ServiceCloudCommunitiesNotLoggedIn','Service Cloud Communities: Chatter Service log when action is performed but user is not logged in'],
        ['spcac','ServiceCloudCommunitiesUserRegistration','Service Cloud Communities: Chatter Service log when user registers'],
        ['spuli','ServiceCloudCommunitiesLogIn','Service Cloud Communities: Chatter Service log when user logs in'],
        ['spulo','ServiceCloudCommunitiesLogOut','Service Cloud Communities: Chatter Service log when user logs out'],
        ['spsiv','ServiceCloudCommunitiesSingleItemViewLoaded','Service Cloud Communities: Chatter Service log when single item view is loaded'],
        ['spshm','ServiceCloudCommunitiesShowMore','Service Cloud Communities: Chatter Service log when show more is clicked'],
        ['spetc','ServiceCloudCommunitiesEscalatedToCase','Service Cloud Communities: Chatter Service log when question is escalated to case'],
        ['spctc','ServiceCloudCommunitiesCaseCreated','Service Cloud Communities: Service Cloud Communities log when case is created'],
        ['spbce','ChatterServiceConfigurationException','Service Cloud Communities: Chatter Service log when bad configuration is thrown'],
        ['spdel','ChatterServiceDeleteItem','Service Cloud Communities: Chatter Service log when feed item is deleted'],
        ['spflg','ChatterServiceFlagItem','Service Cloud Communities: Chatter Service log when feed item is flagged'],
        ['dsdbg','DashboardDebug','Dashboard: Logged to show dashboard debugging information'],
        ['dseto','DashboardEnqueueTimeout','Dashboard: Logged to show a dashboard enqueue request timed out.s'],
        ['dscmn','DashboardCommon','Dashboard: Base class for most dashboard related log lines. Treat as abstract base class.'],
        ['dsvww','DashboardView','Dashboard: Log type for dashboard view rendering.'],
        ['dseml','DashboardSendEmail','Dashboard: Logs type for dashboard emails'],
        ['dssfi','DashboardSelectFilter','Dashboard: Logged to indicate the user has selected a filter item. Not output for polling.'],
        ['dssru','DashboardSelectRunningUser','Dashboard: Logged to indicate the user has selected a running user. Not output for polling.'],
        ['dsrrq','DashboardRequestRefresh','Dashboard: Logged to indicate a dashboard refresh is requested.'],
        ['dssav','DashboardSave','Dashboard: Logged to indicated a dashboard is saved'],
        ['aiaex','AnalyticsMobileAuthorizationException','Analytics Ipad: Logs for the Analytics Mobile iPad app'],
        ['lkinf','LockDiagnosticsInfo','Row Lock Diagnostic Tool: Logging for Row Lock Timeouts'],
        ['sosli','SolrIndex','Solr Search: A batch of work done by the solr index.'],
        ['selog','SearchLog','Search: Catchall log recordType for search. Eventually should be phased out in favor of custom logTypes.'],
        ['wftwf','TimeBasedWorkflow','Workflow: Timebased Workflow runtime logs'],
        ['wftqm','TimeBasedWorkflowQueueMonitor','Workflow: Time-Based Workflow queue activty monitoring'],
        ['wfale','AlarmEventMonitor','Workflow: Alarm event logs'],
        ['wfdbg','TimeBasedWorkflowDebug','Workflow: Timebased Workflow runtime debug logs'],
        ['wfemm','WorkflowEmail','Workflow: Workflow Email Logging'],
        ['sepre','SearchQueryPrefiltering','Search: Log line for prefilter information/metrics'],
        ['sedip','SearchQueryDocIdPrefiltering','Search: Log line specific to doc id/FiF prefilter information/metrics'],
        ['sepes','SearchPerEntitySnippetRequest','Search: Log line for a request to snippet/highlighting internal API for a particular entity'],
        ['sesnp','SearchSnippetRequest','Search: Log line for a request to snippet/highlighting internal API'],
        ['seaqt','AvgQueryTime','Search: Average Query Time'],
        ['sefql','FederatedQuery','Search: Federated Query Logging'],
        ['sefqe','FederatedQueryError','Search: Federated Query Error Logging'],
        ['kpcpu','CpuKpi','KPIs: Cpu Kpi Metrics'],
        ['kpdsk','DiskKpi','KPIs: Disk Kpi Metrics'],
        ['kpmem','MemoryKpi','KPIs: Memory Kpi Metrics'],
        ['kpnet','NetworkKpi','KPIs: Network Kpi Metrics'],
        ['kpprc','ProcessKpi','KPIs: General logtype for kpi'],
        ['kpdbg','KpiDebug','KPIs: General logtype for kpi'],
        ['setrm','IndexReplayLogTrim','Search: Nightly index replay log trims'],
        ['seibp','IndexBackupPurger','Search: Nightly index backup purger process'],
        ['senbp','NightlyIndexBackup','Search: Nightly index backup process that enqueues backup message for orgs with more than N index partitions, where N is set in config file.'],
        ['sessp','SkipSingleSearchPage','Search: Skiped single search page'],
        ['sodel','SolrOrphanedIndexDeleter','Solr Search: Logged after processing all solr cores from all solr servers to delete any that are no longer in the DB metadata'],
        ['sobpc','SolrBuddyPairCheckProcess','Solr Search: Logged after processing all solr buddy pairs that are currently in DB metadata'],
        ['sopng','SolrServerPing','Solr Search: Logged after running a ping check to ensure reachability against solr servers'],
        ['sopgp','SolrServerCheckProcessSummary','Solr Search: Logged after running a series of ping checks against all solr servers'],
        ['sopbk','PeriodicSolrIndexBackup','Solr Search: Enqueue stats of a single solr index backup through SolrIndexBackupProcess'],
        ['soimp','SolrIndexingMonitorProcess','Solr Search: Periodic solr indexing monitoring process that checks if there is any solr indexing job that has been stalled'],
        ['sopbs','PeriodicSolrIndexBackupSummary','Solr Search: Periodic Solr index backup process that enqueues backup message for orgs with more than N index partitions, where N is set in config file.'],
        ['seval','SearchIndexValidation','Search: Logs for IndexValidation messages'],
        ['secln','SearchIndexCleanup','Search: Logs for cron job doing removal of unused versions from index'],
        ['sovlp','SolrValidationProcess','Solr Search: Periodic Solr validation enqueueing process of oracle vs index data consistency'],
        ['sochp','SolrIndexCheckerProcess','Solr Search: Logged after processing each solr index partition that is current in the DB metadata'],
        ['sochm','SolrIndexMetadataCheckProcess','Solr Search: Logged after processing each solr index that is current in the DB metadata'],
        ['socrp','SolrCoreReencryptionProcess','Solr Search: Logged after checking if each solr core needs reencryption'],
        ['soreb','SolrClusterRebalancerProcess','Solr Search: Logged after processing each solr index that is current in the DB metadata'],
        ['sostg','SolrStagingEnvironmentProcess','Solr Search: Logged after processing all solr indexes that is current in the DB metadata'],
        ['sochk','SolrIndexCheck','Solr Search: Logged after checking the integrity of a solr core'],
        ['sochi','SolrIndexMetadataCheck','Solr Search: Logged after checking the integrity of a solr index'],
        ['somvc','SolrMoveCore','Solr Search: Logged to track initiation and completion of solr core moves'],
        ['sospt','SolrPartitionSplit','Solr Search: Logged to track initiation and completion of solr partition splits'],
        ['sobkp','SolrIndexBackup','Solr Search: Logged to track Solr index backup process'],
        ['socbk','SolrCoreBackup','Solr Search: Logged to track backup of a single Solr core'],
        ['soirt','SolrIndexRestore','Solr Search: Logged to track Solr index backup restore by metadata restore handler'],
        ['socrt','SolrCoreRestore','Solr Search: Logged to track each Solr core restore process by data restore handler'],
        ['sosiv','SolrIndexVersioning','Solr Search: Logged during each stage of an offline index rebuilding process: SolrIndexVersioning'],
        ['sosvp','SolrIndexVersioningJobManagementProcess','Solr Search: Logged during periodic process managing cluster wide versioning jobs'],
        ['soptc','SolrProtection','Solr Search: Logged when taking actions to protect Solr servers'],
        ['socqr','SolrChangeQueueRegulation','Solr Search: Logged when preventing the move of bulk rows from core.last_unindexed to core.last_unindexed_work table'],
        ['socei','CustomEntityIndexingMessageHandler','Solr Search: Logged after handling a valid indexing status change on a custom entity'],
        ['sowqr','SolrIndexWorkQueueRegulation','Solr Search: Logged when preventing the split of bulk rows in core.last_unindexed_work table'],
        ['socqu','SolrChangeQueue','Solr Search: Logged when enqueueing messages to process record changes.'],
        ['sospq','SanPurgeQueue','Solr Search: Logged when removing row from last_unindexed because SAN not running anymore.'],
        ['bfcqm','BuffaloChangeQueueMonitor','BuffALO: Logged when enqueueing messages for processing changes during live migration.'],
        ['rrlog','AsyncReportRun','Asynchronous Report Run: Asynchronous Report Run logs are created for reporting requests that are executed through the message queues or scheduled. This includes dashboard refreshes, async reports, schedule reports, and analytics snapshots.'],
        ['mblog','MultiBlockReport','MultiBlock Report Run: Report logs for multiblock report executions'],
        ['rslog','ReportResultStore','Report Results Store: Logs for writing reports results to store'],
        ['arenq','AsyncReportEnqueue','Asynchronous Report: Log for async report export utilizing message queue framework, right after message is handled'],
        ['arfin','AsyncReportFinish','Asynchronous Report: Log for async report export utilizing message queue framework, right after message is handled'],
        ['arend','AsyncReportCommit','Asynchronous Report: Logs for async report export utilizing message queue framework, inside OnRemove'],
        ['arcln','AsyncReportCleanup','Asynchronous Report: Logs for async report clean up process to log how many rows it cleaned each iteration.'],
        ['aacmn','AnalyticsAPICommon','Analytics API: Logs fields common to both describe and run for the Analytics API'],
        ['aades','AnalyticsAPIDescribe','Analytics API: Logs for describe call to Analytics API'],
        ['aarun','AnalyticsAPIRun','Analytics API: Logs for the a report run using the Analytics API'],
        ['aapoi','AnalyticsAsyncAPIPollInstances','Analytics API: Logs a call to \'GET instances'],
        ['aacri','AnalyticsAsyncAPICreateInstance','Analytics API: Logs a call to \'POST instances'],
        ['aarei','AnalyticsAsyncAPIRetrieveInstance','Analytics API: Logs a call to \'GET (instanceId)'],
        ['aaqri','AnalyticsAsyncAPIQueryInstance','Analytics API: Logs a call to POST (instanceId) along with a query spec in the post body'],
        ['aadei','AnalyticsAsyncAPIDeleteInstance','Analytics API: Logs a call to \'DELETE (instanceId)'],
        ['aadcm','AnalyticsDashAPICommon','Analytics API: Log fields common to dashboard resource requests'],
        ['aadcs','AnalyticsDashAPICommonWithStatus','Analytics API: Adds status fields for requests that return status'],
        ['aadre','AnalyticsDashAPIResults','Analytics API: Logs call to GET dashboardId (get results)'],
        ['aadst','AnalyticsDashAPIStatus','Analytics API: Logs call to GET dashboardId/status (get status)'],
        ['aadtr','AnalyticsDashAPIRefresh','Analytics API: Logs call to PUT dashboardId (trigger refresh)'],
        ['aadel','AnalyticsDashAPIDelete','Analytics API: Logs a call to DELETE dashboardId'],
        ['aadsa','AnalyticsDashAPISave','Analytics API: Logs a call to SAVE/CLONE/CREATE a dashboard'],
        ['aadde','AnalyticsDashAPIDescribe','Analytics API: Logs a call to GET dashboardId/describe'],
        ['aausr','AnalyticsUserAPI','Analytics API: Logs a call to GET users (user lookup)'],
        ['risav','ReportInstanceSave','Report Instance (Analytics Async API): Logs the act of saving the results of the async report run'],
        ['risde','ReportInstanceSingleDelete','Report Instance (Analytics Async API): Deletion of a single report instance (called by the DELETE (instanceId))'],
        ['ribde','ReportInstanceBatchDelete','Report Instance (Analytics Async API): Batch deletion of the report instances (called by the sweeper cron Job)'],
        ['riswp','ReportInstanceSweeper','Report Instance (Analytics Async API): Batch deletion lifecycle logging. Used for PK-Chunk Task Logging.'],
        ['rades','ReportsApexDescribe','Reports Apex(Analytics Apex): Logs for describe call to Analytics API'],
        ['rarun','ReportsApexRun','Reports Apex(Analytics Apex): Logs for the a report run using the Analytics API'],
        ['rapoi','ReportsApexPollInstances','Reports Apex(Analytics Apex): Logs a call to \'GET instances'],
        ['racri','ReportsApexCreateInstance','Reports Apex(Analytics Apex): Logs a call to \'POST instances'],
        ['rarei','ReportsApexRetrieveInstance','Reports Apex(Analytics Apex): Logs a call to \'GET (instanceId)'],
        ['anncj','AnalyticNotificationCronJob','Personal Analytic Notifications: Logs for any operations associated with scheduling or running the AnalyticNotificationUserJob'],
        ['anscj','AnalyticNotificationScheduleJob','Personal Analytic Notifications: Logs for scheduling a new AnalyticNotificationUserJob with the cron scheduler'],
        ['anucj','AnalyticNotificationUnscheduleJob','Personal Analytic Notifications: Logs for unscheduling an existing AnalyticsNotificationUserJob with the cron scheduler'],
        ['ancjr','AnalyticNotificationCronJobRun','Personal Analytic Notifications: Logs a triggered run of AnalyticsNotificationUserJob'],
        ['ancje','AnalyticNotificationCronJobEnqueue','Personal Analytic Notifications: Logs the report and notification IDs for each async report run enqueued with the message queue'],
        ['annmh','AnalyticNotificationMessageHandlerRun','Personal Analytic Notifications: Logs a run of the AnalyticsNotificationMessageHandler'],
        ['asact','AnalyticsEnhancedFolderSharingAction','Analytics Enhanced Folder Sharing: Log commit action of analytics enhanced folder sharing'],
        ['pkgop','AppDistOp','Application Distribution (Packaging): Logs major packaging operation, such as INSTALL, UPGRADE, EXPORT, or UNINSTALL'],
        ['pkgso','AppDistSubOp','Application Distribution (Packaging): Logs packaging sub-operation, such as specific handler during INSTALL'],
        ['pkgvt','AppDistEvent','Application Distribution (Packaging): Logs packaging events that are not part of core packaging transactions'],
        ['csopr','ChangeSetOp','Change Sets: Logs major change set operations, such as UPLOAD/VALIDATE/DEPLOY/DELETE'],
        ['csdir','ChangeSetDeployDir','Change Sets: Logs changes to an orgs deploy directions'],
        ['csevt','ChangeSetEvent','Change Sets: Logs the changeset events such as XI call and replication delay when inbound changeset isn\'t ready'],
        ['csdep','ChangeSetDeploy','Change Sets: Logs the completion of all inbound changeset events'],
        ['cserr','ChangeSetError','Change Sets: Logs the completion of all inbound changeset events'],
        ['macli','MdApiClientInfo','Metadata Api: Base class for basic client info. This isn\'t logged, only extended by the other MDAPI log types below'],
        ['maopr','MdApiOperation','Metadata Api: Logs major Metadata Api operations, such as DEPLOY/RETRIEVE/LIST/DESCRIBE, before being queued'],
        ['madop','MdApiDeployOption','Metadata Api: Logs information received in the Deploy Option'],
        ['madvt','MdApiDeployEvent','Metadata Api: Logs the beginning of major MDAPI operations, such as dequeue, upsert, delete, runTests, retrieve'],
        ['mades','MdApiDeployEntityStatistics','Metadata Api: Logs deploy statistics of each MDAPI component type'],
        ['mares','MdApiRetrieveEntityStatistics','Metadata Api: Logs deploy or retrieve statistics of each MDAPI component type'],
        ['madep','MdApiDeployStatistics','Metadata Api: After deploy is complete, statistics collected during deploy'],
        ['marvt','MdApiRetrieveEvent','Metadata Api: Logs the beginning of dequeue for retrieves'],
        ['maret','MdApiRetrieveStatistics','Metadata Api: After retrieve is complete, statictics collected during retrieve'],
        ['mazip','MdApiZipStatistics','Metadata Api: Info about the deploy zip given'],
        ['fffss','FfxPathStats','FileForce: File Counts & Total space used for a particular path on the fileforce server. There may be log lines for the root, plus additional entries for the by type breakdown'],
        ['ffdel','FileForceDeleter','FileForce: Summary information from runs of the FileForceDeleter process, that physically removes files from the ffx server'],
        ['ffrod','ReplicationOrphanDeleter','FileForce: Summary information from runs of the ReplicationOrphanDeleter process, which cleans up files that have been orphaned on the fileforce DR servers'],
        ['ffssd','SyncSoftDelete','FileForce: Sync\'d a file that\'s been soft deleted on the sync source'],
        ['ffsyn','FileSync','FileForce: Sync\'d a file to this server from the sync source'],
        ['ffssm','FileSyncSummary','FileForce: Summary of the results of a fileforce Sync run'],
        ['ksbse','Keystone','Keystone: logging for kesytone events'],
        ['ksclt','KeystoneCatalogClient','Keystone: Keystone client operations'],
        ['ksksp','StorePool','Keystone: Keystone store pool operations'],
        ['kskst','Store','Keystone: Keystone store operations'],
        ['ksscr','KeystoneCatalogStoreClientReadExtent','Keystone: Keystone read extent from store'],
        ['ksscw','KeystoneCatalogStoreClientWriteExtent','Keystone: Keystone write extent to store'],
        ['ksjob','KeystoneJob','Keystone: Keystone Job control logging'],
        ['emaut','EmailAuthor',': EmailAuthor invocations'],
        ['emact','EmailAction',': '],
        ['emetf','EmailThread',': Email Thread merge field invocations'],
        ['axapx','ApexExecution','Apex Execution: Apex Executions'],
        ['axlim','ApexLimit','Apex Execution: Apex Limit'],
        ['axswp','ApexTestResultSweeper','Apex Execution: Sweeper for apex test run results'],
        ['axfqp','FlexQueuePerf','Apex Execution: Flex Queue Performance'],
        ['axfqg','FlexQueueGeneric','Apex Execution: Flex Queue generic logs'],
        ['axbmg','ApexBatchMessage','Apex Execution: Log line for each batch message taken from the queue'],
        ['axque','ApexQueueable','Apex Execution: Log line for ApexQueueable'],
        ['axdbg','ApexDebugger','Apex Execution: Apex Debugger Event'],
        ['axdia','ApexProcessor','Apex Execution: Apex processor for object flattening'],
        ['hmrmr','HammerResultManager','Hammer: Hammer Result Manager'],
        ['vfdbg','Visualforce','Visualforce General: General logtype for Visualforce'],
        ['vfprf','VFPerf','Visualforce General: Logtype for Visualforce Diagnostics'],
        ['vfalr','VFAlert','Visualforce General: Logtype for Visualforce Alerts - conditional logging for concerning VF runtime metric(s)'],
        ['vfrmt','VFRemoting','Visualforce General: Logtype for Visualforce Remoting'],
        ['strdm','SiteRedirectMapping','Sites: Logging that happens when a site url is redirected'],
        ['stper','SitePermissions','Sites: Logging type for site permissions'],
        ['stnet','SiteNetwork','Sites: Logging type for site network'],
        ['stupl','SiteUpload','Sites: Logging type for uploading'],
        ['stpub','SitePublish','Sites: Logging type for site publishing'],
        ['stsim','SiteImport','Sites: Logging type for site import'],
        ['stsex','SiteExport','Sites: Logging type for site export'],
        ['stlng','SiteLanguage','Sites: Logging type for multi-lingual'],
        ['stutl','SiteUtil','Sites: Logging type for utilities'],
        ['stcmp','SiteBaseComponent','Sites: Logging type for (base) component logs'],
        ['stscp','SiteComponent','Sites: Logging type for Site component logs'],
        ['ststm','SiteStream','Sites: Logging type for Site stream serialization logs'],
        ['stche','SiteCache','Sites: Logging type for cache-related logs'],
        ['stdap','SiteDataApi','Sites: Logging type for data-api-related logs'],
        ['stsrv','SiteServlets','Sites: Logging type for servlet-related logs'],
        ['stdom','SiteDomain','Sites: Logging type for site domain-related logs'],
        ['stprf','SitePerformance','Sites: Logging type for site performance-related logs'],
        ['stcnp','ChatterNetworkPicasso','Sites: Logging type for community site.com sites'],
        ['stflx','SiteFlexiPage','Sites: Logging type for flexi page conversions'],
        ['stapr','Approvals','Sites: Logging type for Site.com approvals related logs'],
        ['stseo','SiteSeo','Sites: Logging type for Site.com SEO related logs'],
        ['stcrq','CommunityRequests','Sites: Logging type for community page requests'],
        ['staur','SiteAuraIntegration','Sites: Logging type for Aura in Site.com'],
        ['stspi','SiteProdInfo','Sites: Logging type for Site.com-based Community metrics'],
        ['jslog','JS','JSLogging: Javascript logging triggered by a client request'],
        ['jsper','JSPerf','JSLogging: Javascript performance logging triggered by a client request'],
        ['jscar','ContainerAsyncRequestJS','JSLogging: Client timing information for finished Container deploys'],
        ['sclgo','SecurityLogout','Security (aka ACS): Logging for both when a user explicitly logs off and when a user is logged off due to inactivity.'],
        ['sctsc','SecurityTerminated','Security (aka ACS): Logging for both when Security Central terminatess at the user\'s request.'],
        ['sclgh','SecurityLoginHints','Security (aka ACS): Logging for things relating to login hint functionality'],
        ['sccrf','SecurityCSRF','Security (aka ACS): Logging for CSRF events'],
        ['scldb','SecurityNoDatabaseLoginPage','Security (aka ACS): Logging for accesses to the login page on environments in no database mode'],
        ['scrmc','SecurityResManCliLoc','Security (aka ACS): Logging for the Resource Manager and Client Localizer'],
        ['sclrp','SecurityLoginReplication','Security (aka ACS): Logging for replication status for login XI calls'],
        ['scsta','SecurityLoginStats','Security (aka ACS): Logging for Login process execution time'],
        ['scsso','SecuritySsoProviderService','Security (aka ACS): Logging for multi-provider SSO functionality'],
        ['scids','SecurityUserIdService','Security (aka ACS): Logging for the openID Connect ID endpoint'],
        ['scxss','SecurityXSS','Security (aka ACS): Logging for XSS events'],
        ['scicc','SecurityICC','Security (aka ACS): Logging for IC Cookie events'],
        ['scchl','SecurityChallenge','Security (aka ACS): Logging for user challenges'],
        ['scver','SecurityVerification','Security (aka ACS): Logging for the verification framework'],
        ['sctph','SecurityToopher','Security (aka ACS): Logging for Toopher callouts'],
        ['scchv','SecurityClientHashValidator','Security (aka ACS): Logging for client hash validator issues'],
        ['scoau','SecurityOAuth','Security (aka ACS): Logging for OAuth login'],
        ['scsdm','SecuritySessionDomainValidator','Security (aka ACS): Logging for issues when sessions attempt to jump across domains'],
        ['sccks','SecurityCookieCatalog','Security (aka ACS): Logging for cookies'],
        ['scsml','SecuritySaml','Security (aka ACS): Logging for SAML login'],
        ['scssp','SecuritySelfServicePortalSession','Security (aka ACS): Logging for Self service portal user creation'],
        ['scmsg','SecurityMessaging','Security (aka ACS): Logging for the messaging framework\'s callouts'],
        ['scaut','SecurityAuthentication','Security (aka ACS): Logging for general login record'],
        ['scesc','SecurityEscaping','Security (aka ACS): Logging for really long escaped strings'],
        ['scfpw','SecurityForgotPassword','Security (aka ACS): Logging for forgot password requests'],
        ['scses','SecuritySession','Security (aka ACS): Logging for session'],
        ['scmek','MasterEncryptionKey','Security (aka ACS): Logging for the org level encryption key'],
        ['scstn','SecurityToken','Security (aka ACS): Logging for Security Token'],
        ['scsvc','SecurityVulnerabilityCheck','Security (aka ACS): Logging for Security Vulnerability Check'],
        ['scsfl','SecurityForcedLogin','Security (aka ACS): Logging Successful Forced Logins'],
        ['scsts','SecurityHsts','Security (aka ACS): Logging for HSTS being present'],
        ['scbfp','SecurityBrowserFingerprint','Security (aka ACS): Logging Browser Fingerprint Information'],
        ['scfpg','SecurityFingerprintGeneration','Security (aka ACS): Logging Browser Fingerprint Generation Event'],
        ['scsxp','SecurityForcedLoginXiProxy','Security (aka ACS): Security Forced Login Xi Proxy Call'],
        ['scpip','SecurityForcedLoginPreInterstitial','Security (aka ACS): Security Forced Login Pre Interstitial Page'],
        ['scscp','SecurityCentral','Security (aka ACS): Security Central Page'],
        ['scuam','UIAccessMonitoring','Security (aka ACS): Logging all pages without access checks'],
        ['sccsp','CSPReport','Security (aka ACS): Logging Content Security Policy (CSP) violations'],
        ['sccse','ContentDomainCSPReport','Security (aka ACS): Logging Content Security Policy (CSP) on Content Domain violations'],
        ['idjit','IdentityJustInTimeUserProvision','Identity: Logging for identity just-in-time user provision'],
        ['idlau','IdentityAppLauncher','Identity: Logging for the Salesforce Identity App Launcher'],
        ['amapp','AppsManagementAppInstall','Apps Management: Logging for the App Installation endpoint'],
        ['amams','AppMenuSave','Apps Management: logging for saving an AppMenu'],
        ['amami','AppMenuItemPublish','Apps Management: logging for adding or removing a menu item to an AppMenu'],
        ['njmqx','ContentMQ','Content (aka ninja): logging for content MQ events'],
        ['njmqr','ContentRenditionMQ','Content (aka ninja): logging for content rendition MQ events'],
        ['njmqp','ContentParserMQ','Content (aka ninja): logging for content parser MQ events'],
        ['njmqi','ContentIndexerMQ','Content (aka ninja): logging for content indexer MQ events'],
        ['njevt','ContentEvent','Content (aka ninja): logging for content chatter box events'],
        ['njgsa','ContentGenericStreamingAPIEvent','Content (aka ninja): logging for file sync generic streaming api subscriptions and unsubscriptions'],
        ['njfsc','FileSyncClient','Content (aka ninja): logging for file sync client'],
        ['njfrs','FileRestrictedSharing','Content (aka ninja): Logging for Restricted Sharing feature'],
        ['njfdr','ContentFolder','Content (aka ninja): logging for content content folders'],
        ['njfde','ContentFolderEnablement','Content (aka ninja): Logging for content folder enablement'],
        ['njsea','ContentSearch','Content (aka ninja): Logging for content search events'],
        ['njxfr','ContentTransfer','Content (aka ninja): Logging for content transfer events'],
        ['njccd','ContentCustomDownload','Content (aka ninja): Logging for content custom download'],
        ['njshp','ContentShepherd','Content (aka ninja): Logging for content shepherd events'],
        ['njmfu','ContentMultiFileUploader','Content (aka ninja): Logging for content multi-file uploader events'],
        ['njfnt','ContentFont','Content (aka ninja): Logging for content fonts'],
        ['njbtb','ContentBlackTab','Content (aka ninja): Black Tab Operations'],
        ['njlnk','ContentDocumentLink','Content (aka ninja): Logging for content linking/sharing events'],
        ['njatm','Attachment','Content (aka ninja): Attachments on records (sales.attachment)'],
        ['njcff','ChatterFileFilter','Content (aka ninja): Logging for calling of chatter file filters'],
        ['njdst','ContentDistribution','Content (aka ninja): Content Distributions / Deliveries'],
        ['njcnv','ContentConverter','Content (aka ninja): Tracks which converters ImageMagick/OpenOffice/Aspose was used to convert docs'],
        ['njjvm','ContentJvmPool','Content (aka ninja): Tracks tasks given to a JVM in a JVM pool'],
        ['njjmx','ContentConnectionJmx','Content (aka ninja): JMX connection status messages and updates'],
        ['njpar','ContentDocumentParser','Content (aka ninja): Content and Document parsing'],
        ['njlmt','ContentLimit','Content (aka ninja): Logging for content limits'],
        ['njttl','ContentMessageHandlerThrottler','Content (aka ninja): Logging for content message handler throttle'],
        ['njres','ContentResourceService','Content (aka ninja): Logging for content resources'],
        ['njche','ContentCache','Content (aka ninja): Logging for content cache objects'],
        ['crjob','CronJob','Cron Job: Logging for cron jobs.'],
        ['mqfrm','MessageQueue','Message Queue: logging for Message Queue Framework'],
        ['mqdmt','MessageQueueDynamicMaxQueueTier','Message Queue: logging for Message Queue Dynamic Max Queue Tier'],
        ['mqtxn','MessageQueueTransaction','Message Queue: logging for MQ-QPID based transaction co-ordination data'],
        ['mqenq','MessageQueueEnq','Message Queue: logging for Message Queue Enqueue Side'],
        ['mqtrn','MessageQueueTrn','Message Queue: logging for Message sent to transport'],
        ['mqdeq','MessageQueueDeq','Message Queue: logging for Message Queue Dequeue Side'],
        ['mqhdl','MessageQueueHandle','Message Queue: logging prior to Message Queue handleMessage call'],
        ['mqreq','MessageQueueReenqueue','Message Queue: Logging for Message Queue reenqueues'],
        ['mqlzy','MessageQueueLazy','Message Queue: logging when message queue decides not to dequeue'],
        ['mqcol','MessageQueueCoalesce','Message Queue: logging when message queue coalesce scheduled job is run'],
        ['mqqbu','MessageQueueQpidBrokerUtilization','Message Queue: logging when qpid broker utilization updater updates broker data'],
        ['mqmrm','MessageQueueMessageRemovedManually','Message Queue: logging when message is removed manually from the UI page'],
        ['mqend','MessageQueueProcessed','Message Queue: logging to define that the message processing is complete for a message'],
        ['mqsru','MessageQueueSlowRampUp','Message Queue: logging when message queue slow ramp up code kicks in on resource overload'],
        ['mqbst','MessageQueueBooster','Message Queue: logging when message queue booster permits are issued'],
        ['mqssv','MessageQueueSuperStarvation','Message Queue: logging when super starvation occurs'],
        ['mqlwt','MessageQueueLongestWaiters','Message Queue: logging longest waiters in the message queues'],
        ['mqast','MessageQueueAdvancedStatus','Message Queue: logging status for every queue in the system'],
        ['mqdas','MessageQueueDequeueAppserver','Message Queue: logging dequeue server status'],
        ['mqslt','MessageQueueSlaTracker','Message Queue: logging for Message Queue SLA tracking'],
        ['mqslc','MessageQueueSlaCompletion','Message Queue: logging for Message Queue SLA tracking'],
        ['mqsps','MessageQueueSlaPushStart','Message Queue: logging for Message Queue SLA Push Rule Job'],
        ['mqspe','MessageQueueSlaPushEnd','Message Queue: logging for Message Queue SLA Push Rule Job'],
        ['mqfui','MessageQueueFairUsageIntervention','Message Queue: logging for Message Queue tracking fair usage intervention'],
        ['mqrar','MessageQueueRouterAddDropRule','Message Queue: logging for adding a new rule to Message Queue Router'],
        ['mqrur','MessageQueueRouterUpdateRule','Message Queue: logging for updating an existing rule to Message Queue Router'],
        ['mqscq','MessageQueueSplitCoalesceQueue','Message Queue: logging for split and coalesce of org based queues'],
        ['mqrsj','MessageQueueRouterSweeperJob','Message Queue: logging for Message Queue Router sweeper job'],
        ['mqlrt','MessageQueueAlerting','Message Queue: logging for Message Queue Alerts'],
        ['mqfua','MessageQueueFairUsageAction','Message Queue: logging promotion and demotion actions taken by fair usage'],
        ['mqfuq','MessageQueueFairUsageQueue','Message Queue: logging usage from a physicial queue when a fair usage event occurs'],
        ['mqfue','MessageQueueFairUsageEvent','Message Queue: logging when a message queue fair usage event occurs'],
        ['mqcdc','MQDequeueClusterRacNodeDbCpu','Message Queue: Logging rac node cpu utilization when a server joins dequeue cluster'],
        ['mqhal','MessageQueueHealthAlert','Message Queue: Logging for message queue health alert stats processed'],
        ['mqfld','MessageQueueFlooding','Message Queue: Logging for message queue flooding'],
        ['mqswp','MessageQueueSweep','Message Queue: logging for Message Queue Sweeping Processes'],
        ['apout','Callout','API component: Logging for Callouts'],
        ['aprst','RestApi','API component: Logging for the REST API'],
        ['apars','ApexRestApi','API component: Logging for the Apex REST API'],
        ['apblk','BulkApi','API component: Logging for Bulk API processor'],
        ['apblc','BulkApiChunk','API component: Logging for Bulk API chunks'],
        ['apaaa','BulkApiRequest','API component: Logging for Bulk API requests'],
        ['apsyn','SyncApi','API component: Logging for the Sync Api'],
        ['aptrn','StreamingApiTransport','API component: Transport Layer of the Streaming API'],
        ['aprqt','StreamingRequestTrace','API component: Logging for Streaming API request lifetime events'],
        ['appnp','StreamingApiPushNotificationProcessor','API component: PushNotificationProcessor for the Streaming API - per org count'],
        ['apevt','StreamingApiPushNotificationProcessorAgg','API component: PushNotificationProcessor for the Streaming API - per partition aggregate event count'],
        ['appnt','StreamingApiPushNotificationTotal','API component: PushNotificationProcessor for the Streaming API - grand totals for all 32 partitions'],
        ['apshr','StreamingApiSharingChecks','API component: Sharing checks for the Streaming API'],
        ['apfls','StreamingApiFlsChecks','API component: Sharing checks for the Streaming API'],
        ['apqry','StreamingApiQuery','API component: Query to Pull fields from db for the Streaming API or for relevancy checks'],
        ['appsh','GenericStreamingUtil','API component: Push API invocations'],
        ['apgss','GlobalSubscriptionsSync','API component: GlobalSubscriptions bulk sync task, per partion aggregate'],
        ['apgso','GlobaSubscriptionsOrphans','API component: Reaped orphans'],
        ['aptin','TopicInactivity','API component: Topic inactivity during relevancy matching (StreamingTransactionObserver)'],
        ['apcar','ContainerAsyncRequest','API component: Timing information for Container Async Request (CAR) deploys through the Tooling API'],
        ['apcts','TreeSave','API component: Log record for TreeSave api.'],
        ['apdrt','DirectRestConnection','API component: Log record for direct rest'],
        ['mxrqt','ConduitTrace','Conduit Messaging: Logging for largely unstructured diagnostic messages in the Conduit pipeline'],
        ['mxdel','ConduitDelivery','Conduit Messaging: Logging for Conduit pipeline delivery'],
        ['mxsub','ConduitSubscriber','Conduit Messaging: Logging events related to Conduit subscriptions'],
        ['mxpub','ConduitPublish','Conduit Messaging: Logging events related to Conduit publish events'],
        ['mxshs','ConduitSharedSubscriber','Conduit Messaging: Logging events related to Conduit shared subscriptions'],
        ['gllck','GranularLocking','Granular Locking: All logs for Granular locking'],
        ['msmas','ManualAssociation','Email Sync: Manual Association Queue logging'],
        ['ese2s','EmailToSalesforce','EmailToSalesforce: Email to Salesforce logging'],
        ['dxops','DiscoveryOps','Discovery: Log lines for Discovery Operations Metrics'],
        ['dxwrn','DiscoveryWarning','Discovery: Discovery warnings that don\'t warrant a gack.'],
        ['dxlog','DiscoveryInfo','Discovery: Discovery info messages.'],
        ['dxmtr','DiscoveryMetric','Discovery: Discovery metrics messages.'],
        ['dxrpr','RelatedPostsRequest','Discovery: One request for related questions via the Connect API'],
        ['tpend','TopicEndorsement','Topics: Logged when a user has endorsed or unendorsed an other user on a topic in the ui.'],
        ['tpdel','TopicDelete','Topics: Logs for the topic delete process'],
        ['tpner','EntityExtractor','Topics: A batch of work done by the entity extractor.'],
        ['tpcrn','HashTagProcess','Topics: Cron job for calculating hashtags.'],
        ['tpusg','HashTagUsage','Topics: Usage of hashtag in feed posts and comments.'],
        ['inser','InfluenceService','Influence: Chatter influence get.'],
        ['incmp','ChatterActivityCompute','Influence: Chatter Activity computation.'],
        ['tpfpf','TopicFeedExtensionPerformance','Topics: Performance metrics for Topic Feed Extension. Measuring how much time does it take to load topics for a given feed'],
        ['tpsgd','TopicSuggestionsDiagnostics','Topics: Provide deep diagnostics about how or why the topic was suggested'],
        ['tpsgr','TopicSuggestionsRequest','Topics: One request for topic suggestions for a text came in from the UI (not Connect API)'],
        ['tpsgp','TopicSuggestionsPresent','Topics: One Topic Suggestions that has been presented to the user in the UI (not in Connect API). This is for splunk metrics'],
        ['tpsqe','TopicSuggestionsQuality','Topics: to count topic suggestions generation vs. acceptance by user'],
        ['tpass','TopicAssignment','Topics: Topic has been assigned to post by user in the UI (not in Connect API). To get all assignments in the UI also query for tpsga which is a special case of this. This is for splunk metrics'],
        ['tpsga','TopicSuggestionsAccept','Topics: Topic Suggestions that has been accepted by the user in the UI (not in Connect API). This is for splunk metrics'],
        ['tpspf','TopicSuggestionsPerformance','Topics: Performance metrics for Topic Suggestions. Used to evaluate the performance of different steps in the topic suggestion process for a text.'],
        ['rornk','ReputationRankProcess','Reputation: Cron job for calculating ranks.'],
        ['rosav','ReputationBaseObject','Reputation: Reputation object save.'],
        ['rtrtp','ReputationPointsEngine','Reputation Engine: Reputation Points Engine'],
        ['rtrfl','ReputationFeedListener','Reputation Engine: Reputation Feed Listener'],
        ['rtrel','ReputationEventListener','Reputation Engine: Reputation Event Listener'],
        ['tppag','TopicPage','Topics: Topic page statistics.'],
        ['tpusd','TopicUpgradeStepDone','Topics: Hash topic upgrade step is done'],
        ['tpujr','TopicUpgradeJobResult','Topics: Hash topic upgrade> Result of a job Item'],
        ['cique','CampaignInfluenceEvent','CampaignInfluence: Campaign Influence events on the Message Queue'],
        ['cfops','CommunitiesUnifiedEventStats','Communities uniFied eventing: Communities Eventing Diagnostics'],
        ['cfwrn','CommunitiesUnifiedEventDiagnostics','Communities uniFied eventing: Communities Eventing Warnings'],
        ['cfevt','CommunitiesUnifiedEventRecording','Communities uniFied eventing: Logging of when an event comes into the EventCaptureService.'],
        ['nlapi','SemanticExtractorApi','Natural Language Processor: Semantic Extraction API'],
        ['refks','Recommendation','Recommendations: Logging of FeatureKindInitialization.'],
        ['refvu','FeatureVectorUpdate','Recommendations: A batch of work done by the feature vector updater.'],
        ['rerec','RecsActivity','Recommendations: A recommendation has been served, accepted or rejected'],
        ['react','RecsAction','Recommendations: Used to track when a user joins a group that we have previously recommended to him in the feed. In the future we\'ll use this to track whenever a user has done something we recommended but not necessarily though our UI.'],
        ['recrn','CronJobRecs','Recommendations: Cron job for recommendations'],
        ['reorg','OrgLevelRecs','Recommendations: Org Level recommendations'],
        ['reusr','UserLevelRecs','Recommendations: User Level recommendations'],
        ['reotr','OrgLevelTopicRecs','Recommendations: Org Level topic recommendations'],
        ['reprn','RecsPrune','Recommendations: Logging for pruning jobs'],
        ['redbg','Recs','Recommendations: General logtype for disco recs'],
        ['resim','SimilarityActivity','Recommendations: logging for Similarity'],
        ['rerpt','RecsProcessingTime','Recommendations: Time taken in specific part of the recommendation code. For perf test and debugging purposes'],
        ['reclk','RecommendationClick','Recommendations: Used for logging clicks on different recommendation widgets.'],
        ['reops','RecommendationOps','Recommendations: Used for logging operation metrics for recommendation generation.'],
        ['redml','RecDml','Recommendations: '],
        ['redef','RecDefDml','Recommendations: '],
        ['resch','SchRecDml','Recommendations: '],
        ['reaud','RecAudDml','Recommendations: '],
        ['reaum','RecAumDml','Recommendations: '],
        ['mmdbg','Monitoring','Monitoring and Management: General logtype for monitoring and management'],
        ['mmspe','MonitoringSearchExecution','Monitoring and Management: Splunk Search Execution'],
        ['mmspr','MonitoringSearchPartRetrieval','Monitoring and Management: Splunk Single Search Part Retrieval'],
        ['mmspt','MonitoringSearchTransaction','Monitoring and Management: Splunk Search Transaction Retrieval'],
        ['s2que','PNetEvent','Salesforce to Salesforce: logging for Message Queue Framework'],
        ['s2ppe','PNetPreprocessEvent','Salesforce to Salesforce: logging for Partner Network Preprocess Message'],
        ['s2rec','SyncRecordType','Salesforce to Salesforce: logging for Sync Record type over S2S replication connection'],
        ['s2qbp','QueueEventBatchProcessor','Salesforce to Salesforce: logging for Initial Sync Batch Processor'],
        ['s2sbi','InitialSyncBatchInfo','Salesforce to Salesforce: logging for Initial Sync Batch'],
        ['s2isr','InitialSyncRecords','Salesforce to Salesforce: logging for Initial Sync Records'],
        ['s2sds','InitialSyncDisjointSet','Salesforce to Salesforce: logging for Initial Sync Disjoint Sets'],
        ['s2usr','UpsertUser','Salesforce to Salesforce: logging for Upsert User'],
        ['s2sar','PnetSuspendAndResume','Salesforce to Salesforce: logging for Suspend and Resume'],
        ['s2res','PnetResumedEvents','Salesforce to Salesforce: logging for stats on Resume events'],
        ['s2xir','XiRestApi','Salesforce to Salesforce: logging for Xi REST API'],
        ['s2mbs','MetadataBatchSync','Salesforce to Salesforce: logging for Metadata Sync Batch'],
        ['s2plg','PruneOrgSyncLog','Salesforce to Salesforce: Delete BPO org sync log entries'],
        ['chnot','ChatterEmailNotification','Chatter: logging for Chatter Email Notification'],
        ['chrnd','ChatterEmailRendering','Chatter: rendering of Chatter emails'],
        ['chetc','EmailToChatter','Chatter: logging for Chatter Email Notification'],
        ['chatt','EmailToChatterAttachment','Chatter: Email to Chatter attachment'],
        ['chdms','DirectMessageSend','Chatter: logging for Chatter Private Messaging aka Direct Messages'],
        ['cheot','EmailOpenTracking','Chatter: logging for email open tracking'],
        ['chote','EmailOpenTrackingParameterError','Chatter: logging for email open tracking'],
        ['chect','ChatterEmailClickTracking','Chatter: logging for tracking clicks in Chatter emails'],
        ['chcte','ChatterEmailClickTrackingParameterError','Chatter: logging for when an error occurs parsing click tracking parameters out of the HTTP request'],
        ['chsql','ChatterSOQL','Chatter: logging for internal Chatter SOQL queries (generated in our UI code)'],
        ['chinv','ChatterViralInvite','Chatter: logging for Chatter Viral Invitation'],
        ['chvip','ChatterViralInvitePref','Chatter: logging for toggling of inviteCsnUserEnabled preference'],
        ['chvie','ChatterViralInviteErrors','Chatter: logging for errors involved while sending viral invites'],
        ['chvps','ChatterViralInvitePrefAtSignup','Chatter: logging for turning on inviteCsnUserEnabled preference during signup'],
        ['chwtd','ChatterWhatToDoNext','Chatter: logging for Chatter WhatToDoNext'],
        ['chrmn','ChatterReminders','Chatter: logging for Chatter Reminders'],
        ['chonb','ChatterOnboarding','Chatter: logging for Chatter Onboarding Splash pages'],
        ['chppl','ChatterPeopleList','Chatter: logging for Chatter People List Views'],
        ['chmod','ChatterModerator','Chatter: logging for Chatter Moderator'],
        ['chdgl','ChatterDigestLoss','Chatter: Log digests lost because of processing lag'],
        ['chdgi','ChatterDigestIndividual','Chatter: Individual Chatter Digest processing'],
        ['chgds','GroupDigestsSent','Chatter: Chatter Group Digests sent stats'],
        ['chdgs','ChatterDigestsSent','Chatter: Chatter Digest chunk send stats'],
        ['chfui','ChatterUI','Chatter: Chatter feature UI usage stats'],
        ['chcmd','ChatterCommand','Chatter: Log information about a Chatter action.'],
        ['chfam','ChatterFeedAtMention','Chatter: Log information about specific at-mentions in a feed item or feed comment'],
        ['chmps','ChatterFeedMentionProposalService','Chatter: Log information about transaction in the mention proposal service'],
        ['chmpq','ChatterFeedMentionPhoenixQuery','Chatter: Log information about mention phoenix query'],
        ['chfmq','ChatterFeedMaterializationPhoenixQuery','Chatter: Log information about feed materialization phoenix query'],
        ['chfmw','ChatterFeedMaterializationWriter','Chatter: Log information about feed materialization phoenix writer'],
        ['chcpt','ChatterComponent','Chatter: Log information about a Chatter component.'],
        ['chcon','ChatterConnect','Chatter: Log information about a Chatter Connect request'],
        ['chfap','ChatterFAAP','Chatter: Log information about a Chatter FAAP request'],
        ['cherr','ChatterError','Chatter: Log information about a Chatter Error encountered'],
        ['chfbo','ChatterFeedsBulkOperation','Chatter: Log information about a Feeds Bulk Operation'],
        ['chfeu','ChatterFeedEntityUpdate','Chatter: Log information about a FeedItem/FeedComment update'],
        ['chgrp','CollaborationGroup','Chatter: Log information for Collaboration Group'],
        ['chgrf','CollaborationGroupPerformance','Chatter: Log information for Performance metrics for Collaboration Group'],
        ['chexu','ChatterExternalUser','Chatter: Log information about Chatter External User actions.'],
        ['chphu','PhotoUpload','Chatter: Log information about a Chatter photo upload.'],
        ['chhov','ChatterHover','Chatter: Log information about chatter hover usage.'],
        ['chcre','ChatterUserObjectCreation','Chatter: Log information about a new Chatter user created.'],
        ['chuch','ChatterUsernameChange','Chatter: Log information about a new Chatter user created.'],
        ['chife','ChatterInvalidFeedItems','Chatter: Log information about an InvalidFeedItemsException thrown by a FeedItem handler.'],
        ['chfea','ChatterFeedEntityAttachment','Chatter: Log information about attachments being inserted, updated or deleted in a FeedItem.'],
        ['chfes','ChatterFeedEntityStatus','Chatter: Log information about feed entity status change'],
        ['chdna','ChatterDenormAction','Chatter: Log information about new asynchronous denorm action'],
        ['chdba','ChatterDenormBulkActions','Chatter: Log information about a bulk set of asynchronous denorm actions'],
        ['chdfp','ChatterDecorationFeedPerformance','Chatter: Feed decoration performance per feed strategy'],
        ['chbfp','ChatterBasicFeedPerformance','Chatter: Feed access performance per feed strategy'],
        ['chfrc','ChatterFeedRepresentationCache','Chatter: Log feed cache metrics'],
        ['chdv2','ChatterDenormFollowV2','Chatter: Log information about denorming feed item insertions for Follow Model V2'],
        ['chcfr','ChatterChannelFeedRead','Chatter: Log information about a channel feed read operation'],
        ['chnfr','ChatterNewsFeedRead','Chatter: Log information about a news feed read operation'],
        ['chrif','ChatterRecommendationsInFeed','Chatter: Log information about recommendation in feed operations'],
        ['chfdm','ChatterFeedAttachmentDataMiss','Chatter: Log information about data missing in feed_attachment table for content post'],
        ['chfmg','ChatterFeedAttachmentDataMigration','Chatter: Log information about data migration by cron job to feed_attachment table'],
        ['chhdm','ChatterHBaseDenormMethod','Chatter: Log information about an HBase Denorm operation'],
        ['chodd','OnDemandDenorm','Chatter: logging for on-demand denorm'],
        ['chevt','FeedEventMessageHandler','Chatter: logging for Feed Event Listener framework'],
        ['chmut','FeedMuteUserActions','Chatter: feed element mute or unmute by owner of news feed'],
        ['chmum','FeedMuteMentionActions','Chatter: feed element unmute because owners of news feed were mentioned in a comment'],
        ['chpje','PlsqlMessageTransactionObserver','Chatter: messages marshalled to Java for enqueue in this transaction'],
        ['chpsh','PushFeedEventListener','Chatter: logging for Push feed'],
        ['chppt','ProfilePlatformTabsetRender','Chatter: logging for rendering of the Profile Platform Tabset'],
        ['chppc','ProfilePlatformTabClick','Chatter: logging for clicks on a Profile Platform Tab'],
        ['chfce','FeedClumpingEvent','Chatter: logging for Clumping Event (FeedItem/FTC Inserted)'],
        ['chfue','FeedUnclumpingEvent','Chatter: logging for Unclumping Event (Comment Inserted/FeedItem Deleted)'],
        ['chams','AtMentionSelection','Chatter: logging for end user selection of at mention candidate'],
        ['chrts','RichTextFeedEntitySave','Chatter: Log stats for rich text feed entities'],
        ['chrtv','RichTextValidationFailure','Chatter: Log feed entity rich text validation failure'],
        ['pv000','Provisioning','Provisioning: base provisioning log record'],
        ['pvque','ProvisioningQueue','Provisioning: logging for provisioning queue'],
        ['pvsop','XiProvisioning','Provisioning: logging for cross-instance provisioning API calls'],
        ['pvlic','ProvisioningLicense','Provisioning: logging for events when provisioning licenses'],
        ['pvmsg','MessageSent','Provisioning: Logging in the event when messages are sent to licensing and provisioning components'],
        ['pvpsr','ProvisioningSystemRequest','Provisioning: Logging for requests made to the ProvisioningSystem interface'],
        ['pvago','AggregationOutputListener','Provisioning: Logging for callouts to aggregation output listeners'],
        ['pvpsl','ProvisioningSystemResponseListener','Provisioning: Logging for callouts to provisioning system response listeners'],
        ['pvbdg','BadData','Provisioning: Logging specifically for data related errors reported from provisioning due to org replication failures. We can extend this to other bad data situations as needed.'],
        ['pvprh','ProvisioningRequestHandler','Provisioning: Logging for main processing in ProvisioningRequestHandler'],
        ['pvprm','ProvisioningRequestMisc','Provisioning: misc processing in ProvisioningRequestHandler'],
        ['pvprt','ProvisioningRequestTiming','Provisioning: Timing data for ProvisioningRequestHandler (and steps)'],
        ['pvtim','ProvisioningTiming','Provisioning: Timing data for various provisioning operations'],
        ['qqper','PermissionSet','Administration: Base Permission Set log record'],
        ['qqpsm','PermissionSetModification','Administration: Permission Set modification log record'],
        ['qqpsa','SessionPermissionSetActivation','Administration: Permission Set Activation log record'],
        ['lesav','LicenseEditorSave','LicenseEditor: Log for recording the save action on License editor usage '],
        ['lesrc','LicenseEditorSearch','LicenseEditor: Log for recording search action usage on License Editor'],
        ['ueueb','UsageEntitlement','Usage Entitlements: Usage Entitlements log record'],
        ['ueuec','UsageEntitlementCreation','Usage Entitlements: logging for Usage Entitlement Creation'],
        ['ueurp','UsageReporting','Usage Entitlements: logging for Usage REST API'],
        ['dmimp','Import','Data Management: logging for data management Import'],
        ['kbpub','KnowledgeArticlePublishing','Knowledge: logging for publishing process'],
        ['kbvft','KnowledgeArticleVFTags','Knowledge: logging of tag execution'],
        ['kbtrk','KnowledgeArticleUpdateTracking','Knowledge: update viewstat or tracking keyword use'],
        ['kbctl','KnowledgeArticleController','Knowledge: logging of KB standard controller execution'],
        ['kbcon','KnowledgeArticleContribution','Knowledge: logging for articles contributed from a case or reply'],
        ['kbexp','KnowledgeExportController','Knowledge: logging for article Exporter'],
        ['kbimp','KnowledgeImportController','Knowledge: logging for article Importer'],
        ['kbevh','KnowledgeEvhSweeper','Knowledge: logging for article version history sweeper'],
        ['kbdbg','KnowledgeControllerDebug','Knowledge: Debug logging for knowledge'],
        ['kmaud','TenantSecret','Platform Encryption - Key Management: Log for tenant secrets'],
        ['kmkdf','TenantSecretKeyDerivationMetrics','Platform Encryption - Key Management: Key derivation time metrics'],
        ['kmtsg','TenantSecretGenerationMetrics','Platform Encryption - Key Management: Tenant secret time metrics'],
        ['enval','EncryptionValidation','Platform Encryption: Encryption validation time metrics'],
        ['enefe','EncryptedFilesEnabled','Platform Encryption: Logs changes to the EncryptedFilesEnabled preference'],
        ['encol','CryptoOpLogging','Platform Encryption: Logs basic metrics of crypto operations'],
        ['trsop','SoapTrials','Trials: logging for successes and failures of soap operations in trials'],
        ['mdact','MobileDirectAction','Mobile Direct: Logging for mobile direct actions'],
        ['mnact','MobileNotificationAction','Mobile Notifications: Logging for mobile notification actions'],
        ['mnsmp','SilentMobilePush','Mobile Notifications: Logging for Silent Mobile Push'],
        ['setal','QueryResultClick','Search: Tracking the result clicks that occur during search'],
        ['rbctr','ReportBuilderController','Report Builder Controller: Logging for Report Builder Controller events'],
        ['fcque','ForecastingEvent','Forecasting: Forecasting events on the Message Queue'],
        ['fcenq','ForecastingEnqueue','Forecasting: Forecasting events as they enter the Message Queue'],
        ['fcdeq','ForecastingDequeue','Forecasting: Forecasting events as they start to dequeue from the Message Queue'],
        ['fcacn','Forecasting','Forecasting: Forecasting User Action Logs'],
        ['qxjob','QueuedExec','Queued Execution: Queued Execution tasks log this record type'],
        ['seclk','SearchResultClickTracking','Search: Tracking the result clicks that occur during search'],
        ['seren','SearchResultRenderingUi','Search: Logs which UI rendered the search results'],
        ['sedwl','SearchDwellTime','Search: Logs UI actions so that we can infer dwell time'],
        ['seabt','SearchABTest','Search: Logging for search a/b test'],
        ['setsr','SearchTopSearchResults','Search: Logs the top search results displayed in the UI'],
        ['serfv','SearchRankerFeatureValues','Search: Logs ranker feature values used at query time.'],
        ['seent','SearchResultEntryPoint','Search: Logs the entry point into the search results UI'],
        ['seuit','SearchUiTracking','Search: Logs what the user clicks on when viewing the Search Results page'],
        ['seuir','SearchUiRefinement','Search: Logs sorting, filtering and pagination actions in search results page'],
        ['semas','SearchMruAutoSuggestion','Search: Logs MRU queries'],
        ['semac','SearchMruAutoComplete','Search: Logs user clicks on MRU auto complete suggestions'],
        ['seasc','SearchAutoSuggestionClick','Search: Auto Suggestion UI logging'],
        ['seinc','SearchIncrementalFetch','Search: Incremental fetch query logging'],
        ['sepro','SearchPromotedResults','Search: Indicate which results get promoted'],
        ['sesug','SuggestedArticles','Search: Article suggestion logging'],
        ['oxdnl','OrgExportDownload','OrgExport: logging for Org Export download'],
        ['oxusr','ExportUserJob','OrgExport: logging for the export user job (scheduling)'],
        ['oxexp','ExportSystemJob','OrgExport: log lines for processing export requests'],
        ['oxerr','ExportSystemJobError','OrgExport: log lines for recording export errors'],
        ['oxeds','ExportDataSource','OrgExport: log that tracks the db work of org export'],
        ['tnrep','ReportClassifierTraining','Training Classifiers: Logs for training and checking accuracy of report classifier'],
        ['tnlvw','ListViewClassifierTraining','Training Classifiers: Logs for training and checking accuracy of listviews'],
        ['adqry','ADCQuery','ADC: ADC database query logging'],
        ['oslog','OrgSizing','OrgSizing: logging for Org Size Job'],
        ['oserr','OrgSizingError','OrgSizing: error log line'],
        ['islog','InstanceSizing','InstanceSizing: logging for Instance Size Job'],
        ['iserr','InstanceSizingError','InstanceSizing: error log line'],
        ['xslog','StorageSizing','StorageSizing: logging for Storage Size Job'],
        ['xserr','StorageSizingError','StorageSizing: error log line'],
        ['sxsbo','SandboxOrg','Sandbox: If you don\'t have both the source org and sandbox org'],
        ['sxabt','SandboxBase','Sandbox: Absolute minimal info needed for a sandbox log'],
        ['sxgen','SandboxGeneric','Sandbox: Generic logging that takes in an extra message'],
        ['sxsql','SandboxSql','Sandbox: Logging for generated sql'],
        ['sxsch','SandboxSearch','Sandbox: Logging for search setup in sandbox copy'],
        ['sxpct','SandboxPostCopyTask','Sandbox: Logging for post copy tasks perfomed at the end of sandbox copy'],
        ['sxsup','SandboxStatusUpdate','Sandbox: Generic logging that takes in an extra message'],
        ['sxdim','SandboxCopyDimension','Sandbox: Log Finished copies'],
        ['sxinf','Sandbox','Sandbox: logging for Sandbox copy'],
        ['sxoid','SandboxOidGen','Sandbox: logging for pending sandbox orgId generation'],
        ['sxcpy','SandboxCopy','Sandbox: logging for Sandbox copy'],
        ['sxtbl','SandboxTableCopy','Sandbox: logging for a single sandbox table'],
        ['sxerr','SandboxCopyException','Sandbox: logging for sandbox exceptions'],
        ['sxopt','SandboxCopyOperation','Sandbox: logging for sandbox copy operations like activations etc.,'],
        ['sxsdp','SandboxSDP','Sandbox: logging for Sandbox Smart Data Placement'],
        ['sxpdc','PdcSampling','Sandbox: Logging for Sandbox Partial Data Copy'],
        ['sxsmp','PdcSpidering','Sandbox: Logging for Sandbox Partial Data Copy Spidering'],
        ['rptme','ReplicationIndexerTimer','Replication: Log to records time for a replication activity'],
        ['rpidx','ReplicationIndexerProcess','Replication: A run of work done by the indexer for detecting changes that need replication.'],
        ['rpcdt','ReplicationChangeDetection','Replication: Per cycle (per entity) of the change detection process'],
        ['rpsvg','ReplicationServerGet','Replication: A GET request handled by the replication server for recent changed data.'],
        ['rpsvm','ReplicationServerMultiGet','Replication: A GET request handled by the replication server for recent changed data.'],
        ['rpsvf','ReplicationServerList','Replication: A LIST request handled by the replication server for recent changed data.'],
        ['rpsvl','ReplicationServerMultiList','Replication: A LIST request handled by the replication server for recent changed data.'],
        ['rpclp','ReplicationClientProxy','Replication: A single list request from a client to a proxy for one or more servers.'],
        ['rpclc','ReplicationClientMultiGetChunk','Replication: Work done by the client to process a single chunk of replicated records.'],
        ['rpclg','ReplicationClientMultiGet','Replication: Work done by the client fetch multiple chunks.'],
        ['rpdel','ReplicationClientDelay','Replication: Time take to upsert a chunk by a target instance after its created on source.'],
        ['rclag','StandbyDbLagMonitor','ROCS (Read Only Clones for Scale): '],
        ['rcrsn','ROCSContext','ROCS (Read Only Clones for Scale): '],
        ['jwimp','JigsawImport','Jigsaw: Jigsaw Import Service'],
        ['jwapi','JigsawApi','Jigsaw: Jigsaw API'],
        ['jwind','JigsawIndustry','Jigsaw: Long Jigsaw Industry Search'],
        ['jwexp','JigsawExport','Jigsaw: Jigsaw Export'],
        ['dcgca','GetContactsAndAccountsAction','DataDotCom: Call log for Get Contacts Action and Get Accounts Action'],
        ['dcgcc','GetContactsAndAccountsController','DataDotCom: Call Log for Get Contacts Controller and Get Accounts Controller'],
        ['dcdia','DataDotComImportAction','DataDotCom: DataDotCom Import Action call Log'],
        ['dccha','CompanyHierarchyApi','DataDotCom: Company Hierarhcy API call Log'],
        ['dcchc','CompanyHierarchyController','DataDotCom: Company Hierarhcy controller call Log'],
        ['jwdas','DataDotComAsyncAPI','Jigsaw: Data.com Matcher API'],
        ['dcapi','DataDotComMatcherAPI','DataDotCom: Data.com Matcher API'],
        ['dcdtl','DunsRightTrafficLight','DataDotCom: Data.com Traffic Light'],
        ['dcatl','DunsRightAsyncTrafficLight','DataDotCom: Data.com DUNSRight Async Traffic Light'],
        ['dcdfa','DataDotComFactAPI','DataDotCom: Logging for Data.com Fact API'],
        ['dcdfc','DataDotComFieldClaim','DataDotCom: Logging for Data.com Fact API'],
        ['dcdnb','DataDotComDnBAPI','DataDotCom: Data.com DnB API'],
        ['dcbas','DataDotComBulkApiDunsRightMatchSubmitter','DataDotCom: Data.com Bulk API DUNSRight Match Submitter'],
        ['dcbap','DataDotComBulkApiDunsRightMatchPoller','DataDotCom: Data.com Bulk API DUNSRight Match Poller'],
        ['dcbar','DataDotComBulkApiDunsRightMatchRetreive','DataDotCom: Data.com Bulk API DUNSRight Match Retreive'],
        ['dcdac','DataDotComDunsRightAsyncCollectorJob','DataDotCom: Data.com DUNSRight Async Collector Job Log'],
        ['dcdal','DataDotComDunsRightAsyncLookupJob','DataDotCom: Data.com DUNSRight Async Lookup Job Log'],
        ['dcdas','DataDotComDunsRightAsyncSubmitter','DataDotCom: Data.com DUNSRight Async Submitter'],
        ['dcdap','DataDotComDunsRightAsyncPoller','DataDotCom: Data.com DUNSRight Async Poller'],
        ['dcdam','DataDotComDunsRightAsyncMonitor','DataDotCom: Data.com DUNSRight Async Monitor'],
        ['dcjob','DataDotComCleanJob','DataDotCom: Data.com Clean Job Per-Batch Log'],
        ['dcsky','DataDotComSocialKeyJob','DataDotCom: Data.com SocialKey Job Per-Batch Log'],
        ['dcoth','DatacloudOAuth','DataDotCom: Data.com OAuth logging'],
        ['dcsoc','DatacloudSocialAPI','DataDotCom: Datacloud Social API Log'],
        ['dcdun','DatacloudDunsRightSyncAPI','DataDotCom: Datacloud DUNS Right Sync API Log'],
        ['dcdbm','DdcDandbCompanyAPI','DataDotCom: Datacloud DandB Company API Log'],
        ['dcgeo','AddressGeoAPI','DataDotCom: Address Geo Code API Log'],
        ['dcpbg','PbGeoService','DataDotCom: PB GeoSpectrum Service Runtime Logging'],
        ['dcpbm','PbGeoMonitoring','DataDotCom: PB Geo Monitoring Logging'],
        ['dcdci','DatacloudCompanyInsight','DataDotCom: DDnB API for company insight'],
        ['xcmin','XCleanBase','XClean Service: XClean Base Info'],
        ['xccom','XCleanCommon','XClean Service: XClean Common Log'],
        ['xclog','XClean','XClean Service: XClean Log'],
        ['xcrlo','XCleanRelatedObjects','XClean Service: XClean Log'],
        ['xcsvc','XCleanService','XClean Service: XClean Service Log'],
        ['xcper','XCleanPerpetual','XClean Service: XClean Service Log'],
        ['xcicg','XCleanIncrementalGen','XClean Service: Capture errors for incremental'],
        ['xcinc','XCleanIncrementalClean','XClean Service: Perform incremental clean'],
        ['xcicj','XCleanIncrementalJob','XClean Service: XClean incremental job'],
        ['xcict','XCleanIncrementalTask','XClean Service: XClean incremental task'],
        ['xcapi','XCleanApi','XClean Service: XClean API Service'],
        ['xcpkc','XCleanBulkPKChunk','XClean Service: XClean Bulk PK Chunking Log'],
        ['xcgen','XCleanApiGeneral','XClean Service: XClean API call Log'],
        ['xccsv','XCleanErrorCsv','XClean Service: XClean Error CSV Log'],
        ['xcerr','XCleanError','XClean Service: XClean Processing Error Log'],
        ['dtuil','DataAssessmentUi','Data Assessment: DataAssessment UI Log'],
        ['dtdcj','DaCronJob','Data Assessment: Log record for data assessment cron jobs'],
        ['dtdxc','DaXclean','Data Assessment: Log record for XClean part of data assessment'],
        ['dtdaq','DaQuery','Data Assessment: Data assessment query'],
        ['dtdao','DaOperation','Data Assessment: Da operation'],
        ['dtdag','DaAggregation','Data Assessment: DA aggregation'],
        ['fsapi','FeedServiceApi','Social CRM API Calls: Social CRM FeedService API'],
        ['fsqya','ExternalApiAggregateQuery','Social CRM API Calls: Aggregate log for a logical group of External API Calls'],
        ['fsqyi','ExternalApiCallQuery','Social CRM API Calls: Log for an individual HTTP request made to an External API'],
        ['fssrv','FeedServiceServlet','Social CRM API Calls: Logging for FeedServiceServlets.'],
        ['fslog','SocialCrm','Social CRM API Calls: Logging for Social CRM.'],
        ['fseip','ExternalImageProxy','Social CRM API Calls: Log records for SocialCRM external image proxy for proxying image requests from the Touch container app'],
        ['fsprs','PhotoUrlResolution','Social CRM API Calls: Log records for requests made to the PhotoUrlResolutionServlet that '],
        ['dlops','DistributedLoader','Distributed Loader: distributed loader events'],
        ['btapi','SfdcAuditableRestApi','BlackTab: Black Tab REST API exercised'],
        ['bttkg','SfdcAuditableTokenGeneration','BlackTab: Generated token for API call'],
        ['bttki','SfdcAuditableInvalidTokenGeneration','BlackTab: User without access tried to generate a token'],
        ['bttks','SfdcAuditableActionTokenResultSuccess','BlackTab: Token successfully validated'],
        ['bttkf','SfdcAuditableActionTokenResultFailed','BlackTab: Token validation failed'],
        ['btlas','BlackTabLoginAs','BlackTab: Black Tab LoginAs exercised'],
        ['btbta','BlackTabAudit','BlackTab: Black Tab audit of admin perms exercised'],
        ['btlgn','BlackTabLogin','BlackTab: Black Tab Login exercised to modify metadata in customer org'],
        ['btxil','BlackTabXiLogin','BlackTab: Black Tab user exercised cross instance login'],
        ['btbtf','BlackTabForensics','BlackTab: SFDC BT forensics'],
        ['btusc','BlackTabUserAudit','BlackTab: SFDC BT user changes audit trail'],
        ['btbti','BTUserUnauthorizedAction','BlackTab: BlackTab user was prevented from attempted unauthorized action'],
        ['btpul','BTPremierAdminUiLogin','BlackTab: Premier administrator exercised login to a customer org'],
        ['btdes','BTDataExport','BlackTab: BlackTab user scheduled a data export'],
        ['btsql','BTSqlQuery','BlackTab: BlackTab user running a sql query'],
        ['btnps','BTNPSql','BlackTab: Record for a BT user issuing sql that queries for not permitted data. (nps -> not permitted sql)'],
        ['btdts','BTDTSql','BlackTab: Record for a BT user issuing sql that queries against data tables. (dts -> data table sql)'],
        ['bt2fa','CentralAuth','BlackTab: Log record of failed login attempts to central org'],
        ['dhsav','DataPipelineSave','DataPipelines Definition on Hadoop: DataPipeline Save'],
        ['djsav','DataPipelineJobSave','DataPipeline Job: DataPipeline Job Save'],
        ['djdbg','DataPipelineJobDebug','DataPipeline Job: DataPipeline Debug'],
        ['gfcjs','GridforceCoordinatorJobSummary','Gridforce: Gridforce Coordinator Job Summary'],
        ['gfcrt','GridforceCoordinatorRunTime','Gridforce: Gridforce Coordinator Execution time'],
        ['gfblk','GridforceBulkApiJob','Gridforce: Gridforce Bulk Api job details'],
        ['gfmhr','GridforceHandlerRunTime','Gridforce: Gridforce Message Handler runtime for a single state of each Job'],
        ['gfevt','GridforceEvent','Gridforce: Gridforce Job Event: COMPLETE, INSERT, KILLED, etc'],
        ['gfdsu','GridforceDataStoreUpdate','Gridforce: Gridforce DataStore update'],
        ['gfdsr','GridforceDataStoreRestore','Gridforce: Gridforce DataStore Restore'],
        ['gfdsd','GridforceDataStoreDelete','Gridforce: Gridforce DataStore Delete'],
        ['gfmtf','GridforceFfxMultiTenantFile','Gridforce: GridforceFfxStorage for saving and uploading multi-tenant files'],
        ['gfslc','GridforceSfdcLogCopy','Gridforce: Gridforce Log Copy Process'],
        ['gfsqi','GridforceSchedulerQueueInfo','Gridforce: Gridforce Job Assigned Queue Information'],
        ['gfqmi','GridforceQueueManagementInfo','Gridforce: Gridforce Queue Management Information'],
        ['gfmtr','GridforceLogMetrics','Gridforce: Gridforce log metrics jobs state'],
        ['gfprf','GridforceLogMetricsPerformance','Gridforce: Gridforce Log Metrics job related performance'],
        ['bkjob','BackgroundJob','Background Job: Logging for background jobs.'],
        ['wpjob','WaitingPage','Waiting Page: Logging for waiting page based requests.'],
        ['ualog','Usage','Mobile Usage Accounting: Mobile Usage logging'],
        ['shcud','MetadataCUDOperation','Core/Custom Schema: Logging for a CUD operation on a metadata'],
        ['shced','CustomEntityDefintionCUD','Core/Custom Schema: Logging for CUD operation on custom entity definitions'],
        ['shcfd','CustomFieldDefintionCUD','Core/Custom Schema: Logging for CUD operation on custom field definitions'],
        ['shhde','CEDHardDelete','Core/Custom Schema: Custom entity definition hard-delete logging'],
        ['shhdf','CFDHardDelete','Core/Custom Schema: Custom field definition hard-delete logging'],
        ['shrsc','RSFCalculation','Core/Custom Schema: Rollup summary field calculation logging'],
        ['shanp','AutoNumberPopulation','Core/Custom Schema: Auto Number initial population logging'],
        ['shcfl','CustomFieldLock','Core/Custom Schema: Logging for locking custom field rows'],
        ['shrsf','RSFCommonFields','Core/Custom Schema: Common fields used for logging in the RSF Calculations'],
        ['shrsr','RSFDeltaCalculationSample','Core/Custom Schema: Statistics collection log record for RSF Delta Calculations'],
        ['shruc','RSFUpdateCalculation','Core/Custom Schema: Statistics collection log record for RSF Calculations during an update'],
        ['shcfc','CustomFieldTypeConversion','Core/Custom Schema: Custom field type conversion logging'],
        ['shftc','CustomFieldTypeConversionTask','Core/Custom Schema: Custom field type conversion asynchronous task logging'],
        ['shprp','PicklistReplaceProcess','Core/Custom Schema: Picklist Replace Process logging'],
        ['shpr2','PicklistReplaceV2','Core/Custom Schema: Picklist Replace Version 2 logging'],
        ['shpda','PicklistDeleteAsync','Core/Custom Schema: Picklist Delete Async'],
        ['shprn','PicklistRename','Core/Custom Schema: Picklist Rename logging'],
        ['shdqc','LocationDistanceQueryColumn','Core/Custom Schema: Location distance query logging'],
        ['shmca','MultiCurrencyActivation','Core/Custom Schema: MultiCurrency activation logging'],
        ['shmcd','MultiCurrencyDeactivation','Core/Custom Schema: MultiCurrency deactivation logging'],
        ['shmce','MultiCurrencyEstimation','Core/Custom Schema: MultiCurrency estimation logging'],
        ['augen','Aura','Aura: Contains cummulative aura data for the request'],
        ['auact','AuraAction','Aura: Contains fine grained information for aura actions'],
        ['aucst','AuraCache','Aura: Cache reporting information for aura actions'],
        ['usreq','UIServicesRequestContext','UI Services: logtype for UI Services Request Context'],
        ['uscon','UIServicesContext','UI Services: logtype for UI Services Context. Not currently used as of 192'],
        ['usgen','UIServicesAPIRequest','UI Services: logtype for UI Services API call counts'],
        ['usact','OneAppAction','UI Services: logtype for Project One actions'],
        ['uschr','UIServicesCache','UI Services: logtype for UI Services cache performance'],
        ['usrlp','RecordLayout','UI Services: logtype for RecordLayout server performance breakdown'],
        ['uscst','UIServicesGlobalCacheStats','UI Services: logtype for UI Services Global Cache analytics'],
        ['pwpvs','PipelineViewServiceAPIRequest','Pipeline View: logtype for Pipeline View Service API calls'],
        ['uitrk','UIAction','User Interface: logtype for the User Interface in an Aura/Hybrid client'],
        ['ailtn','AILightning','Analytics Ipad: Logtype for Lightning analytics and instrumentation'],
        ['aiuim','AIUIModule','Analytics Ipad: Logtype for Lightning analytics and instrumentation UI Modules'],
        ['uilfd','LayoutFieldData','User Interface: logtype for data about fields in a layout'],
        ['mydyb','MyDayBase','My Day: logtype for MyDay general'],
        ['mydym','MyDayMatch','My Day: logtype for MyDay matching'],
        ['mydyp','MyDayParse','My Day: logtype for MyDay general/parsing'],
        ['mydyr','MyDayRelation','My Day: logtype for MyDay relation service'],
        ['ominf','OrgMigrationInspectorInfo','Org Migration Inspector: Logging for Org Migration Inspector BT Tool'],
        ['wdlog','DbSessionStateWatchdog','DB Session state watch dog: '],
        ['cdlog','ChangeDetection','Change Detection: '],
        ['cdmne','ChangeDetectionMiner','Change Detection: '],
        ['pdlog','PhysicalDelete','Physical Delete: '],
        ['pdssp','PersistentGlobalPhysicalDeleteSuspension','Physical Delete: Logtype for tracking persistent global suspension of physical delete'],
        ['pddlp','DeleteLogPurge','Physical Delete: Logtype for tracking delete_log purge'],
        ['ldswp','EntitySweeper','Logical Delete: Entity Sweeper Task Logging'],
        ['ldbin','EmptyRecycleBin','Logical Delete: Empty Recycle Bin Logging'],
        ['plsql','PlsqlLogging','Plsql Log: Plsql Logging'],
        ['pltal','TimestampAndLevel','Plsql Log: Timestamp and log level for log messages'],
        ['dpsbv','SchemaBuilderPageVisit','Declarative platform or DAB: logging for schemabuilder page visits'],
        ['dpsbe','SchemaBuilderEdit','Declarative platform or DAB: Metadata changes done in schemabuilder'],
        ['sacom','SharingCommon','Sharing: Sharing base logging format'],
        ['sapjt','ParallelJob','Sharing: Parallel Job Tracker'],
        ['satim','SharingTiming','Sharing: Time taken by sharing operations'],
        ['sarul','SharingRule','Sharing: Sharing rule changes'],
        ['saras','RoleAssignment','Sharing: Role: add or remove user'],
        ['sarrp','RoleReparent','Sharing: Role: re-parent'],
        ['sagrp','GroupOperation','Sharing: Group/queue operation: create, update, or delete'],
        ['sagpm','GroupMembership','Sharing: Group/queue membership'],
        ['satar','AccountTerritoryAssignmentRule','Sharing: Territory Assignment Rule changes'],
        ['satai','AccountTerritoryAssignmentRuleItem','Sharing: Territory Assignment Rule Item change'],
        ['sasrr','SharingRuleRecalc','Sharing: Sharing Rule Recalculation'],
        ['sarst','SharingRuleRecalcStrategy','Sharing: Sharing Rule Recalculation Strategy'],
        ['sascr','ChunkedScrutiny','Sharing: Chunked Scrutiny logs'],
        ['sapao','PortalAccountOwner','Sharing: logs owner changes for portal accounts'],
        ['sabut','SharingButtonClick','Sharing: Button click from a sharing page'],
        ['saowd','OrgWideDefaultChange','Sharing: Org-Wide-Default change (Sequential and Async Sequential)'],
        ['savis','VisibilityOperation','Sharing: Async Visibility Operation'],
        ['saacs','EntityAccessChecker','Sharing: Entity Access Check Inconsistent Log'],
        ['sasdc','SharingDescriptorCreation','Sharing: Sharing Descriptor Creation Chunk'],
        ['sasdm','SharingDescriptorMaintenance','Sharing: Sharing Descriptor Maintenance'],
        ['saslk','SharingLock','Sharing: Target Specific Sharing Lock'],
        ['sasmt','SharingStateMachine','Sharing: Sharing State Machine Transitions'],
        ['vsspm','VisibilityServiceStrategyPerformanceMetric','Visibility Service: Visibility Service Strategy Performance Metrics'],
        ['pxaqc','AppQuickCreate','Platform Experience: User created an app with App Quick Create'],
        ['mwupg','ManyWhoUpgrade','Many Who: Logging for many who activity data upgrade'],
        ['7kena','SharedContactsEnablement','Shared Contacts: Logging for Shared Contacts Enablement'],
        ['mcmet','MailCatcherMetric','MailCatcher: Basic metrics for each inbound email processed by MailCatcher'],
        ['mcbnc','MailCatcherBounce','MailCatcher: Mailcatcher Bounce handler data'],
        ['ssovr','OrgCopy','Org Copy: Logging for overall copies'],
        ['ssent','OrgCopyEntity','Org Copy: Base class for any line that needs entity info'],
        ['sschk','OrgCopyChunk','Org Copy: Base class for any line that needs entity chunk info'],
        ['sscex','OrgCopyChunkExport','Org Copy: Logging for Chunk Export'],
        ['sscim','OrgCopyChunkImport','Org Copy: Logging for Chunk Import'],
        ['sscop','OrgCopyStart','Org Copy: '],
        ['sscmc','OrgCopyChunkMisc','Org Copy: Export/Import chunk creation (with flexibility for extension)'],
        ['sscsz','OrgCopyEntitySize','Org Copy: Export/Import Number of chunks per entity'],
        ['sscqu','OrgCopyChunkingQuery','Org Copy: Logging for Chunking Queries'],
        ['sscer','OrgCopyError','Org Copy: Logging for all sandstorm errors'],
        ['ssmsg','OrgCopyHandleMessage','Org Copy: Logging for Handling a Copy Message'],
        ['sstxt','OrgCopyTextMessage','Org Copy: Logging for generic text messages'],
        ['ssxic','OrgCopyXiCall','Org Copy: Logging for sandstorm xi calls'],
        ['tfovr','TaskOverview','Task Framework: Logging for task framework tasks'],
        ['tfent','TaskEntity','Task Framework: Logging for task framework entities'],
        ['tfcqu','TaskChunkingQuery','Task Framework: Logging for task framework entity chunking'],
        ['tfchk','TaskChunk','Task Framework: Logging for task framework entity chunks'],
        ['tferr','TaskError','Task Framework: Logging for all task framework errors'],
        ['tfinf','TaskInfo','Task Framework: Logging for task framework info'],
        ['lgprc','LogProc','Log Processing: Message emitted by instrumented code to be picked up later for offline log processing'],
        ['flfim','FlowInterviewMetrics','Flow: Flow aggregate metrics for an interview'],
        ['flfem','FlowElementMetrics','Flow: Flow element metrics'],
        ['flfed','FlowExecutionDiagnostics','Flow: Flow execution diagnostic info'],
        ['flfls','FlowLoadAndSave','Flow: Flow load and save info'],
        ['flfip','FlowInterviewPersistence','Flow: Flow interview persistence info'],
        ['flfra','FlowRuntimeApi','Flow: Flow runtime api info'],
        ['sumet','SignupMetrics','Signup: Metrics for each new org created'],
        ['susro','SignupRequestObjectMetrics','Signup: Metrics for creation of a Signup Request Object'],
        ['suumc','UsageMetricsCollectionStats','Signup: Statistics on how many packages are requesting metrics and who is collecting them'],
        ['umceq','UmpsCoreUpdateEnque','Umps: Flow element metrics'],
        ['umcdq','UmpsCoreUpdateDeque','Umps: Flow element metrics'],
        ['cmsql','MetricsSQL','Cloud Metrics Query: logging for Cloud Metrics SQL queries'],
        ['cmimq','MetricsInMessageQueue','Cloud Metrics Query: logging for Cloud Metrics SQL queries'],
        ['xdsqp','SharepointQueryResponseParser','External Data Source: Lines to aid in debugging problems with sharepoint query response parser'],
        ['xdsqs','SharepointQueryService','External Data Source: Lines to aid in debugging problems with sharepoint query service'],
        ['xdodq','ODataQueryDetails','External Data Source: OData query details'],
        ['xdvqh','XdsQueryDetails','External Data Source: OData query details'],
        ['xdcon','XdsConnect','External Data Source: Plugin and package details for Secure Agent'],
        ['xdapl','SecureAgentPlugin','External Data Source: Plugin details for Secure Agent'],
        ['xdcls','SecureAgentsCluster','External Data Source: Logging for Secure Agent\'s Cluster'],
        ['xdidc','ExternalIdConverter','External Data Source: Stats for External Id Conversion'],
        ['xdajs','BackgroundOperationSweep','External Data Source: Background Operation sweep stats'],
        ['xdajt','BackgroundOperationTrans','External Data Source: Background Operation state transitions'],
        ['xdscq','SfdcConnectQueryDetails','External Data Source: Salesforce Connect query details'],
        ['xorsv','XOrgRSVP','Cross-Org Data (xorg): Invocation of the RSVP between a Spoke and his Hub'],
        ['xodes','XOrgDescribeHub','Cross-Org Data (xorg): Invocation of the xorgDescribeHub XI verb'],
        ['xofpt','XOrgFastpathBase','Cross-Org Data (xorg): Base log line for the invocation of one of the XOrg verbs for fastpath.'],
        ['xoqry','XOrgQuery','Cross-Org Data (xorg): Invocation of one of the XOrg verbs for querying.'],
        ['xocud','XOrgCud','Cross-Org Data (xorg): Invocation of one of the CUD XOrg verb'],
        ['xohmg','XOrgHubMgmt','Cross-Org Data (xorg): XOrg Hub management log record'],
        ['xosyn','XOrgSync','Cross-Org Data (xorg): log record for the Sync Operation performed in XOrg spoke'],
        ['bfora','BuffaloTableChunk','BuffALO: Buffalo logs related to buffaloing Oracle data'],
        ['bfbis','BuffaloImportServlet','BuffALO: Buffalo logs related to importing Oracle data'],
        ['bfffx','BuffaloFFXHandler','BuffALO: Buffalo logs related to pulling fileforce files from source to destination'],
        ['bfcqp','BuffaloChangeQueueProcessor','BuffALO: Buffalo logs related to migrating changed data. '],
        ['bflis','BuffaloLiveImportServlet','BuffALO: Buffalo logs related to importing oracle data while the org is still live on the source instance.'],
        ['bfrcv','BuffaloRowCount','BuffALO: Buffalo gets row count on table after copy'],
        ['pcret','PlatformConnectRetrieval','Platform Connect: Log record for canvas app retrieval.'],
        ['pctrc','PlatformConnectTrace','Platform Connect: Log record for canvas app event traces'],
        ['pccqs','PlatformConnectQuickstart','Platform Connect: Log record for canvas quickstart.'],
        ['pcins','PlatformConnectPersonalInstall','Platform Connect: Log record for personally installed canvas apps.'],
        ['pshub','PlatformServicesEnvironmentHub','Platform Services: Log record for env hub management operations.'],
        ['pshmo','EnvironmentHubMemberObjectMetrics','Platform Services: Metrics for Environment Hub Member Object'],
        ['psssl','EnvironmentHubSsoLoginMetrics','Platform Services: Metrics for usage of EnvironmentHub SSO Login'],
        ['errea','EntityHistoryReaper','Entity History Reaper: logging for Entity History Reaper'],
        ['ryoau','RyppleOAuthClient','Rypple: Log record for Rypple OAuth client.'],
        ['ryapi','RyppleApi','Rypple: Log record for Rypple api.'],
        ['rysha','WorkSharing','Rypple: Log record for Work.com sharing'],
        ['rybpo','WorkBpo','Rypple: Log record for Work.com BPO'],
        ['ryper','WorkServerApi','Rypple: Log record for Work.com End Point'],
        ['ryser','WorkService','Rypple: Log record for Work.com Service Api'],
        ['upcfv','UserContactFieldVisibilitySetting','User Profile: Log record for User\'s contact field visibility settings.'],
        ['htocp','HistoricalTrendOppHistoryCopy','Historical Trending: Historical trending opportunity history copy logging'],
        ['htfdc','HistoricalTrendFieldCopy','Historical Trending: Historical trending field data copy logging'],
        ['htbmh','HistoricalTrendBackMergerHandler','Historical Trending: Historical trending backmerger handler logging'],
        ['htbms','HistoricalTrendBackMergerScheduler','Historical Trending: Historical trending backmerger scheduler logging'],
        ['htjfx','HistoricalTrendCaptureJavaFix','Historical Trending: Historical trending data capture logging (Java). Counters for fixed records because of present staging records'],
        ['htjcp','HistoricalTrendCapture','Historical Trending: Historical trending data capture logging (Java)'],
        ['htmcp','HistoricalTrendMerger','Historical Trending: Historical trending data capture logging (Merger)'],
        ['htxty','HistoricalTrendScrutiny','Historical Trending: Historical trending scrutiny logging'],
        ['rltsk','PostReleaseOrgMessageProcessor','Release: Release Upgrade Task'],
        ['2xtob','S2XTransactionObserver','Salesforce to Exchange Sync: Logging in the S2X TransactionObserver to gather information about which transactions are considered for sync'],
        ['2xobx','S2XTransactionObserverMetrics','Salesforce to Exchange Sync: Logging in the S2X TransactionObserver to gather information about which transactions are considered for sync'],
        ['2xuwd','S2XUnlockDaemon','Salesforce to Exchange Sync: Logging in S2X\'s UnlockDaemon to track which orgs have been detected as forgotten about'],
        ['2xuto','S2XTimedOutUserProcessing','Salesforce to Exchange Sync: Logging in S2X\'s UnlockDaemon to track which users\' state got reset for exceeding the processing time out'],
        ['2xoqm','S2XOrgQueueManager','Salesforce to Exchange Sync: Logging in S2X\'s OrgQueueManager to track which orgs have been selected to sync'],
        ['2xxib','S2XIntegrationCRUDBulk','Salesforce to Exchange Sync: Logging in S2X\'s Exchange integration layer to track CRUD operations to Exchange and their outcome'],
        ['2xxis','S2XIntegrationCRUDSingle','Salesforce to Exchange Sync: Logging in S2X\'s Exchange integration layer to track CRUD operations to Exchange and their outcome for a single user'],
        ['2xshr','S2XSharingCheck','Salesforce to Exchange Sync: Sharing checks for S2X'],
        ['2xads','S2XAutoDiscovery','Salesforce to Exchange Sync: S2X doing autodiscovery with an Exchange endpoint'],
        ['2xxsc','S2XExchServiceCache','Salesforce to Exchange Sync: Logging of cache retrieval outcome of a usr\'s Exchange Service'],
        ['2xinq','S2XUserInitQuery','Salesforce to Exchange Sync: Logging of user specific S2X initialization SOQL queries'],
        ['2xmat','S2XMatching','Salesforce to Exchange Sync: Matching between SFDC and Exchange records'],
        ['2xfir','S2XMatchingFindItemResults','Salesforce to Exchange Sync: The results of finding items in Exchange'],
        ['2xfsr','S2XMatchingConvertedAndStored','Salesforce to Exchange Sync: Record mappings info'],
        ['2xpis','S2XStoreProcessInserts','Salesforce to Exchange Sync: '],
        ['2xpus','S2XStoreProcessUpdates','Salesforce to Exchange Sync: '],
        ['2xcaa','S2XContactAccountAssociation','Salesforce to Exchange Sync: The results of resolving associated Accounts on Contact inserts'],
        ['2xgsm','S2XSharingHelper','Salesforce to Exchange Sync: Information on sharing checks on given users'],
        ['2xrsq','S2XQueryLauncher','Salesforce to Exchange Sync: The results of running a SOQL query for a given query and user ID'],
        ['2xham','S2XSyncEngineHandleMessage','Salesforce to Exchange Sync: Statistics around the sync engine handling a message'],
        ['2xprs','S2XOrgQueueManagerEnqueueResetSyncUsers','Salesforce to Exchange Sync: Statistics around enqueuing users for reset sync'],
        ['2xpau','S2XOrgQueueManagerEnqueueAutoMapUsers','Salesforce to Exchange Sync: Statistics around enqueuing users for automapping'],
        ['2xpxu','S2XOrgQueueManagerEnqueueSyncXUsers','Salesforce to Exchange Sync: Statistics around enqueuing users for Exchange syncing'],
        ['2xpru','S2XOrgQueueManagerEnqueueRefreshUsers','Salesforce to Exchange Sync: Statistics around enqueuing users for refresh syncing'],
        ['2xvco','S2XSyncValidator','Salesforce to Exchange Sync: Statistics around validating a CUD operation for a user'],
        ['2xvcu','S2XOperationValidator','Salesforce to Exchange Sync: Statistics around validating CUD oeprations across users and across syncing entities'],
        ['2xcch','S2XTransactionCollapser','Salesforce to Exchange Sync: Statistics around collapsing transactions'],
        ['2xifo','S2XUserInitForOrg','Salesforce to Exchange Sync: Statistics around processing an org for user initialization for a given sync entity type'],
        ['2xsic','S2XExchangeWebServiceHelperSendItemsRequest','Salesforce to Exchange Sync: Statistics around sendCUDItemsRequest'],
        ['2xsfi','S2XExchangeWebServiceHelperSyncFolderItemsRequest','Salesforce to Exchange Sync: Logging for sync folder items requests'],
        ['2xmro','S2XMsftResponseObject','Salesforce to Exchange Sync: Logging for response from Microsoft web services'],
        ['2xeal','S2XExchAttachmentLoaderResource','Salesforce to Exchange Sync: Logging in S2X\'s EmailConnectAPI to track requests and processing time'],
        ['2xnrz','S2XExchangeServerVersion','Salesforce to Exchange Sync: Logs the Exchange Server Version of the User in a given Org'],
        ['causa','CaseUsage','Cases: Logging usage of Case'],
        ['capro','CaseProcessing','Cases: Logging processing of Case'],
        ['mrusa','MacroUsage','Macros: Logging usage of Macros'],
        ['mrexe','MacroExecution','Macros: Logging execution of Macros'],
        ['abusa','AssetUsage','Assets: Logging usage of assets'],
        ['wousa','WorkOrderUsage','WorkOrders: Logging usage of WorkOrder'],
        ['epusa','EntitlementProcessUsage','Entitlement Process: Logging usage of Entitlement Process'],
        ['fiusa','FeedFilterUsage','Feed Filter: Logging usage of Feed Filters'],
        ['emtmp','EmailTemplate',': EmailTemplate c'],
        ['nwset','NetworkSetup','Network (Communities): Log for network settings servlet'],
        ['nwmbr','NetworkMember','Network (Communities): Log for network member add/drop'],
        ['nwflg','NetworkModeration','Network (Communities): Log for a user flagging an item in a network'],
        ['nwcsp','NetworkCommonCspEnablement','Network (Communities): Log additional details when enabling CommonCspOrgPerm'],
        ['nwptc','NetworkGuestEntityPrimaryTopicCache','Network (Communities): Log for caching an entity object\'s primary topic for guest users'],
        ['nwtrc','NetworkGuestTopicRepCache','Network (Communities): Log for caching TopicRepresentations for guest users'],
        ['nwtra','NetworkTrendingArticlesCache','Network (Communities): Log for tracking cache hit/miss rates for Trending Articles component for guest users'],
        ['nwtal','NetworkTopicBasedArticleListCache','Network (Communities): Log for tracking cache hit/miss rates for topic based ArticleList component for guest users'],
        ['nwavc','NetworkGuestArticleVersionIdCache','Network (Communities): Log for caching KnowledgeArticleVersion record Id by article url and language for guest users'],
        ['nwmom','NetworkKeywordListMatching','Network (Communities): Performance stats for Network moderation rules matching'],
        ['nwmoa','NetworkModerationRuleAction','Network (Communities): Performance stats for the Network moderation action'],
        ['nwbsc','NetworkBasic','Network (Communities): Basic class for Network Logs'],
        ['nwcmc','NetworkManagementHome','Network (Communities): Log for CMC Home page'],
        ['nwsns','SwitchNetworksServlet','Network (Communities): log for switch network servlet'],
        ['nwghr','GlobalHeaderRenderer','Network (Communities): log for Global Header Renderer'],
        ['fhrge','FieldHistoryRetentionGeneral','Field History Retention: All FieldHistoryRetention log lines have these fields - consider abstract'],
        ['fhrcp','FieldHistoryRetentionCopy','Field History Retention: Logging for job that copies data from Oracle\'s core.entity_history to HBase\'s SFDC.ENTITY_HISTORY'],
        ['fhrrm','FieldHistoryRetentionDelete','Field History Retention: Logging for job that deletes from Oracle\'s core.entity_history after the data has been copied to HBase'],
        ['fhrer','FieldHistoryRetentionError','Field History Retention: Logging for one-off error conditions where we do not have sufficient context'],
        ['fhrcl','HistoryJobCleanup','Field History Retention: Logging for clean up history retention jobs and delete jobs'],
        ['dereq','OrgDS','DirectoryService: Organization Directory Service'],
        ['aoreq','AppRouter','AppRouter: AppRouter proxy request summary'],
        ['aocdl','AppRouterLocalOrgLookup','AppRouter: AppRouter Organization Directory lookup summary'],
        ['aordl','AppRouterRemoteOrgLookup','AppRouter: AppRouter Remote Replica Organization Directory lookup summary'],
        ['cpreg','Regulator','Core Service Protection: Logging for Core Service Protection Regulator'],
        ['cpdig','Digester','Core Service Protection: Logging for Core Service Protection Request Digester'],
        ['cppro','Protector','Core Service Protection: Logging for Core Service Protection Protector'],
        ['cprst','ServiceProtectionRestApi','Core Service Protection: Logging for Core Service Protection Rest API'],
        ['cpapi','ServiceProtectionServiceApi','Core Service Protection: Logging for Core Service Protection Service API'],
        ['cppst','ServiceProtectionServicePersistence','Core Service Protection: Logging for Core Service Protection Service API'],
        ['opjob','OpportunitySplitsJob','Opportunity Splits: Logging for Opportunity Splits enabling, disabling or rollback'],
        ['pmevt','PlatformEvent','Platform Monitoring: Logging related to capturing platform events'],
        ['pmtpt','PlatformEventTransport','Platform Monitoring: Logging related to transporting platform event data'],
        ['pmims','InMemoryBufferService','Platform Monitoring: Logging for HBase event consumer of in memory buffer'],
        ['pmhec','PlatformEventBufferConsumer','Platform Monitoring: Logging for HBase event consumer of in memory buffer'],
        ['pmces','PlatformEventConsumerExecutorService','Platform Monitoring: Logging for HBase Event Consumer executor service of in memory buffer'],
        ['pmbuf','PlatformEventInMemoryBuffer','Platform Monitoring: Logging statistics of in memory buffer'],
        ['pmvpr','VagabondProcessorService','Platform Monitoring: Logging related to processing Vagabond files'],
        ['pmdel','PlatformEventDelete','Platform Monitoring: Logging related to deleting platform events in HBase'],
        ['pmais','PlatformEventAdditionalInfo','Platform Monitoring: Logging related to platform event additonal info data'],
        ['pmpem','PlatformEventMetrics','Platform Monitoring: Logging related to generating platform event metrics'],
        ['eldel','EventLogFileDelete','Event Log Files: Logging related to deleting event log file entries in Oracle/FFX'],
        ['elins','EventLogFileInsert','Event Log Files: Logging related to inserting event log file entries in Oracle/FFX'],
        ['elsch','EventLogFileScheduler','Event Log Files: Logging related to event log file gridforce job scheduler'],
        ['elgdr','EventLogFileGridforceDriver','Event Log Files: Logging related to event log file gridforce job scheduler'],
        ['elwai','EventLogFileInsightsIntegration','Event Log Files: Logging related to event log file insights wave app integration'],
        ['diupl','DataImporterUpload','DataImporter: Logs upload of a CSV file'],
        ['diimp','DataImporterImport','DataImporter: Logs synchronous import initiation'],
        ['dires','DataImporterResult','DataImporter: Log for a successful import.'],
        ['diuie','DataImporterUI','DataImporter: Log record for dataImporter.app UI controller errors'],
        ['pfcom','ParallelFrameworkCommon','Parallel Framework: Parallel Framework base logging format'],
        ['pfenq','ParallelFrameworkEnqueue','Parallel Framework: logging for Parallel Framework Enqueue'],
        ['pfhdl','ParallelFrameworkHandleJobItem','Parallel Framework: logging for Parallel Framework handling of an individual job item'],
        ['pfjsm','ParallelFrameworkJobSummary','Parallel Framework: logging for Parallel Framework handling of an individual job'],
        ['pffin','ParallelFrameworkFinish','Parallel Framework: logging for Parallel Framework Finish'],
        ['pftsk','PKChunkableTask','Parallel Framework: Base logging class with fields for parallel job pk chunkable tasks'],
        ['pfpkc','PKChunkCalculation','Parallel Framework: info about PK chunk calculation'],
        ['accst','SecurityDescriptorMigrationChunkStatus','Security Descriptor based Access Control: logging for Security Descriptor Migration Tasks'],
        ['actst','SecurityDescriptorMigrationTaskStatus','Security Descriptor based Access Control: logging for Security Descriptor Migration Tasks'],
        ['acdst','SecurityDescriptorDigestFixerTaskStatus','Security Descriptor based Access Control: logging for Security Descriptor Digest fixer Tasks'],
        ['huxfr','ChubContentDownload','Content Hub: Logging for Content Hub content downloads'],
        ['hurcd','ChubRenditionContentDownload','Content Hub: Logging for Content Hub renditions content downloads'],
        ['huccf','ChubCreateChatterFile','Content Hub: Logging for creation of files from Content Hub'],
        ['hucsc','ChubConnectorCall','Content Hub: Logging for ContentHub connector calls'],
        ['hurrc','ChubRepositoryRegistryCall','Content Hub: Logging for ContentHub RepositoryRegistry call'],
        ['hurlt','ChubRateLimit','Content Hub: Logging for rate limit reached in ContentProviderLimiter call'],
        ['hurll','ChubRateLimitStats','Content Hub: Logging for current rate limit usage in ContentProviderLimiter'],
        ['hucbs','ChubCircuitBreakerStateChange','Content Hub: Logging for circuit breaker state changes'],
        ['huopn','ChubOpenInTarget','Content Hub: Monitors the open in target action for external documents'],
        ['vavap','VisibleActionsApi','VisibleActionsApi: logging details for activities involving visual actions'],
        ['vaprf','PlatformActionsApiPerformance','VisibleActionsApi: platform actions API performance logging'],
        ['bktrc','BackgroundTrace','Background Job: Logging details for background traces'],
        ['tmcom','TerritoryManagementCommon','TerritoryManagement: Logging related to Territory Management operations'],
        ['tmjob','TerritoryManagementJob','TerritoryManagement: Logging in TM MQ based jobs'],
        ['pysql','PlinySql','Pliny: Logging for Pliny SOQL queries'],
        ['pyerr','PlinySqlError','Pliny: Logging for Pliny SQL that resulted in errors'],
        ['pymtd','PlinyMetadata','Pliny: Logging for Pliny metadata operations'],
        ['pyblg','PlinyBulkDataLoadGeneral','Pliny: All Pliny Bulk DataLoad log lines have these fields - consider abstract'],
        ['pyblc','PlinyBulkDataLoadCompletion','Pliny: Summary info when job reaches a terminal state'],
        ['pyble','PlinyBulkDataLoadError','Pliny: Details of errors that occurred processing Bulk Data Load'],
        ['pybli','PlinyBulkDataLoadInfo','Pliny: General logging during Bulk Data Load Execution'],
        ['pyseq','PlinySequenceMetrics','Pliny: Logs summary information of Sequences.'],
        ['phacq','PhoenixResourceCounterAcquire','Phoenix: Logging attempts to get a Phoenix connection protected by the Phoenix Resource Counter'],
        ['phrsc','PhoenixResourceCounter','Phoenix: Logs summary information stored in the Phoenix Resource Counter.'],
        ['phmet','PhoenixMetrics','Phoenix: Logs Phoenix Internal Metrics at a regular cadence.'],
        ['phqry','PhoenixQueryMetrics','Phoenix: Logs Metrics for every Phoenix query executed.'],
        ['pherr','PhoenixError','Phoenix: Logs Errors for Phoenix.'],
        ['wxinf','WebToXInfo','WebToX: Logging for Web To X inforamtion'],
        ['wxurl','WebToXUrl','WebToX: Logging for Web To X server url and remote address'],
        ['nocre','NotificationCreated','Notifications: Entire creation process from start to finish, including fan out'],
        ['nobcr','NotificationBulkCreated','Notifications: Entire creation process from start to finish, including fan out for muliple events'],
        ['noper','NotificationEventPersisted','Notifications: Event persisted to DB'],
        ['nobpr','NotificationBulkEventsPersisted','Notifications: Bulk events persisted to DB'],
        ['nofan','NotificationFanout','Notifications: Notification fanned out to channels'],
        ['nobgt','NotificationBulkGet','Notifications: Bulk list of unrelated notifications retrieved from DB and parsed'],
        ['nobgd','NotificationBulkGetDB','Notifications: Bulk list of unrelated notifications retrieved from DB only'],
        ['nosgt','NotificationSingleGet','Notifications: Single notification retrieved from DB'],
        ['nogrt','NotificationGetMostRecent','Notifications: Most recent notifications retrieved from DB and parsed'],
        ['nogrd','NotificationGetMostRecentDB','Notifications: Most recent notifications retreived from DB only'],
        ['nomsr','NotificationSingleMarkRead','Notifications: Single notification marked read in DB and delivered'],
        ['nomsd','NotificationSingleMarkReadDB','Notifications: Single notification marked read in DB only'],
        ['nobmr','NotificationBulkMarkRead','Notifications: Multiple notifications marked read in DB and delivered'],
        ['nobmd','NotificationBulkMarkReadDB','Notifications: Multiple notifications marked read in DB only'],
        ['nosta','NotificationStatus','Notifications: Status of notifications for user'],
        ['nobuc','NotificationBulkUnreadCount','Notifications: Gets the unread count for numerous recipients'],
        ['nofba','NotificationEventFilterByAccess','Notifications: Count of notification events filtered by access rights'],
        ['nofad','NotificationEventFilterByAccessDetails','Notifications: Notification events that were filtered out by access rights'],
        ['nofbp','NotificationFilterByPrefs','Notifications: Count of notifications filtered by prefs per delivery channel'],
        ['nofpd','NotificationFilterByPrefDetails','Notifications: Notifications filtered out by prefs per delivery channel'],
        ['nohdy','HandleDelivery','Notifications: Logs the delivery time of a delivery channel'],
        ['nogmt','NotificationGetMessage','Notifications: Get the display message for a given notification'],
        ['nosch','NotificationSettingsChange','Notifications: Log when a user changes their notification delivery preference'],
        ['noahe','AsyncHandlerException','Notifications: Logs exceptions thrown within a Message_Handler._handle_Message() call'],
        ['nodce','DeliveryChannelException','Notifications: Logs an exception delivering a notification'],
        ['chfcd','FeedsCascadeDeleteTaskStatus','Chatter: logging for Feeds Cascade Delete Tasks'],
        ['ecspl','SFOSidePanel','Email Clients: Salesforce for Outlook Sidepanel logging'],
        ['ecsfo','SFOClient','Email Clients: Salesforce for Outlook client side sync logging'],
        ['ecsys','SFOSystem','Email Clients: Salesforce for Outlook client side system logging'],
        ['ecidp','SFOInstallerDownload','Email Clients: Salesforce for Outlook installer download logging'],
        ['ecmae','MailAppError','Email Clients: Salesforce1 for Outlook error logging'],
        ['ecmam','MailAppMetrics','Email Clients: Salesforce1 for Outlook metrics logging'],
        ['nssve','NotesServletError','Notes: Notes Servlet Error logging'],
        ['nsdpv','NotesDetailPageView','Notes: Notes detail page view'],
        ['nscud','NotesCUDOperation','Notes: Notes CUD operation'],
        ['dadrt','DuplicateRuntimeTransformation','Dedupe Apps: Duplicate Detection Runtime Object Tranformation Service Logger'],
        ['dadrm','DuplicateRuntime','Dedupe Apps: Duplicate Detection Runtime Logging'],
        ['dadrs','DuplicateRunTimeSummary','Dedupe Apps: Duplicate Detection Runtime Summary Level Logging'],
        ['darmq','DuplicateReportActionMQ','Dedupe Apps: Duplicate Detection Report Action MQ Logging'],
        ['dadsp','DuplicateRecordSetProcessor','Dedupe Apps: Duplicate Record Set Processor Logging'],
        ['memop','MatchOperation','Match Engine: Match Operation Runtime Logging (each MatchOperation contains one or more MatchRequests)'],
        ['memrr','MatchRequest','Match Engine: Match Request Runtime Logging (each MatchRequest must be associated with a single MatchOperation)'],
        ['meemr','ExactMatchRuntime','Match Engine: Match Engine Runtime Logging'],
        ['mepbs','PbService','Match Engine: PB Spectrum Service Runtime Logging'],
        ['mepbm','PbMonitoring','Match Engine: PB Spectrum Monitoring Logging'],
        ['iesch','InsightsELTScheduler','Insights: Insights ELT Workflow Scheduler logging'],
        ['iewmd','InsightsELTWorkflowMigrator','Insights: Insights ELT Workflow Migrator logging'],
        ['iewfm','InsightsELTWorkflowJobManager','Insights: Insights ELT Workflow Management logging'],
        ['iewfs','InsightsELTWorkflowSubmit','Insights: Insights ELT Workflow Job Submit logging'],
        ['iedfs','WaveELTDataflowSubmit','Insights: Wave ELT Dataflow Job Submit logging'],
        ['iedfc','WaveELTDataflowComplete','Insights: Wave ELT Dataflow Job Completion logging'],
        ['iedrb','WaveELTDataflowRequestBase','Insights: Base for Wave ELT Dataflow Request logging'],
        ['iedrd','WaveELTDataflowRequestDequeue','Insights: Wave ELT Dataflow Request Dequeue logging'],
        ['iedrc','WaveELTDataflowRequestCancel','Insights: Wave ELT Dataflow Request Cancel logging'],
        ['iedrn','WaveELTDataflowRequestNew','Insights: Wave ELT Dataflow Request Creation logging'],
        ['ieece','InsightsEdgeControlELT','Insights: Insights Edge Control Client ELT RPC logging'],
        ['ieecq','InsightsEdgeControlQuery','Insights: Insights Edge Control Client Query RPC logging'],
        ['ieecs','InsightsEdgeControlSplit','Insights: Insights Edge Control Client Split RPC logging'],
        ['ieecd','InsightsEdgeControlDelete','Insights: Insights Edge Control Client Delete RPC logging'],
        ['ieapi','InsightsApi','Insights: Insights API logging'],
        ['ietmp','InsightsTemplate','Insights: Insights Template logging'],
        ['iebba','InsightsBuoyBase','Insights: Base for log line for the Buoy framework for Insights UI.'],
        ['iebco','InsightsBuoyContext','Insights: Initial context when user first loads Insights.'],
        ['iebbr','InsightsBuoyBaseRoute','Insights: Base for any buoy log lines that need the route.'],
        ['iebro','InsightsBuoyRoute','Insights: Route/page changes for Insights UI.'],
        ['iebin','InsightsBuoyInteraction','Insights: Interaction tracking for when the user closes an Insights tab.'],
        ['ieber','InsightsBuoyError','Insights: Insights UI errors.'],
        ['iebcp','InsightsBuoyComponent','Insights: Interaction tracking for a specific UI component in Insights.'],
        ['iebpf','InsightsBuoyPerf','Insights: Perf numbers for Wave queries, lenses, and dashboards.'],
        ['iebat','InsightsBuoyAssetsFromTemplate','Insights: Tracks actions create/open for assets created from template'],
        ['iedow','InsightsBuoyDownload','Insights: Tracks user downloads from WaveUI'],
        ['iedvw','InsightsBuoyDashboardView','Insights: Tracks statistics from dashboard views'],
        ['iedwc','InsightsBuoyDashboardWidgetCount','Insights: Tracks counts of widget types in a dashboard'],
        ['iedsc','InsightsBuoyDashboardStepCount','Insights: Tracks counts of step types in a dashboard'],
        ['iedss','InsightsBuoyDashboardStepStats','Insights: Tracks general statistics of all steps in a dashboard'],
        ['a1app','A1App','Admin1 - Mobile Admin App: Admin1 App Log Lines'],
        ['mufrz','FreezeUser','Manage Users: Log lines for freezing/unfreezing a user'],
        ['muact','ActivateUser','Manage Users: Log lines for activating/deactivating a user'],
        ['muset','UserSettings','Manage Users: Log lines to track which field changed while updating a user'],
        ['frval','FormulaValidationRules','Formula Rules with Spanning: Validation Rules logging'],
        ['fppgv','FlexipageView','Flexipage: Flexipage pageview logging'],
        ['fpcrt','FlexipageCUD','Flexipage: Flexipage creation/update/deletion'],
        ['fpide','FlexipageIDE','Flexipage: Base log format for Flexipage IDE'],
        ['lalog','LiveAgentLog','LiveAgent: Generic logging for LiveAgent'],
        ['of1pe','OneGetEntitiesForPrime','Offline: Logs calls for Salesforce1 GetEntitiesForPrime'],
        ['of1pr','OnePrimeRecordsForEntities','Offline: Logs calls for Salesforce1 PrimeRecordsForEntities'],
        ['pocre','SocialPostCreation','SocialPost: Logging creation of SocialPost'],
        ['pocud','SocialPostCud','SocialPost: Logging create, update, delete of SocialPost'],
        ['poper','SocialPostPerformance','SocialPost: Logging performance of SocialPost\'s lifecycle'],
        ['pojsn','SocialPostJson','SocialPost: Logging JSON of a SocialPost'],
        ['pofai','SocialPostFailure','SocialPost: Logging failures in SocialPost\'s lifecycle'],
        ['polog','ScsHttp','SocialPost: Logging Http request/response made by SCS'],
        ['pecre','SocialPersonaCreation','SocialPersona: Logging creation of SocialPersona'],
        ['tsplo','TxnSecurityPolicyLookup','Transaction Security: Log line for looking up policies configured for an event.'],
        ['tspev','TxnSecurityPolicyEvaluation','Transaction Security: Logging evaluation of an event against a policy.'],
        ['tsact','TxnSecurityAction','Transaction Security: Log line for an action taken.'],
        ['prcom','PredictiveCommon','Predictive: Predictive common'],
        ['prsta','PredictiveAnalysisStart','Predictive: Predictive analysis start'],
        ['prfin','PredictiveAnalysisFinish','Predictive: Predictive analysis finish'],
        ['prque','PredictiveAnalysisQuery','Predictive: Predictive query'],
        ['mttrc','MemcachedTrace','MemcachedTrace: Memcached Tracing traces'],
        ['ccred','RedisCache','Cache: Redis cache logs'],
        ['zclog','CaasClient','CaaS client: CaaS client logs'],
        ['zslog','CaasServer','CaaS server: CaaS server logs'],
        ['lcbas','LcBase','Light Cycle Topological Configurations: Basic Light Cycle logging'],
        ['lclip','LcLcip','Light Cycle Topological Configurations: Light Cycle Inventory Provider logging'],
        ['lcreq','LcRequest','Light Cycle Topological Configurations: Light Cycle topological configuration data request'],
        ['cnevt','WsContinuationEvent','Continuation framework for Async WebService callout: Logging of continuation event '],
        ['mimid','MatchIndexDeploy','Match Indexing: Match index deploy task logging'],
        ['mimiu','MatchIndexUndeploy','Match Indexing: Match index undeploy task logging'],
        ['alinf','HttpAccess','Access logging: HTTP access logging'],
        ['ltcpy','LicenseCopy','License Copy Tool Logging: Logging for copying license data'],
        ['tkcou','TaskCreateOrUpdate','Task(activity) logging: Task Create/Update Log Lines'],
        ['qalst','QuickActionListsEdit','Quick Actions: logging quick action related changes made to quick action lists in layout editor'],
        ['qaedt','QuickActionEdit','Quick Actions: logging edit for a quick action'],
        ['qaprf','QuickActionPerformance','Quick Actions: logging performance for quick action'],
        ['49mui','OpportunitySplit','Opportunity Split Data: UI Logging for Opportunity Split records'],
        ['lvpop','ListViewPopulateOnOrgPermEnable','ListViews: Logging for ListView object population'],
        ['ntgtr','NetworkGuestUserPageViewTracking','Network: logtype for tracking public communities page views'],
        ['ntppg','NetworkPulsePage','Network: Network Pulse Page related information'],
        ['ntnpr','NetworkPulseReportLinks','Network: Network Pulse Reports Link Entity related information'],
        ['ntnpa','NetworkPulseReportActions','Network: Network Pulse Reports Action related information'],
        ['lrlma','LmaLicenseRefresh','LMA License Refresh: Logging for Partner License Refresh tool'],
        ['smmsg','SstMsg','Salesforce Secure Transport Module: Contains message and requestId attributes'],
        ['smreq','SstProReq','Salesforce Secure Transport Module: Attributes specific to Process Request made'],
        ['sminf','SstAppSrvInfo','Salesforce Secure Transport Module: Information specific to Application servers'],
        ['smevt','EventsValidation','Salesforce Secure Transport Module: Infomation regarding Events'],
        ['smcnl','SstChannel','Salesforce Secure Transport Module: Information specific to Channels'],
        ['smtim','SstTime','Salesforce Secure Transport Module: Information specific to timing of memcached and allocated time'],
        ['smdsi','DefaultSstInfo','Salesforce Secure Transport Module: Dedicated class for DefaultSSTRequestProcessor'],
        ['smdri','DefaultRemoteSstInfo','Salesforce Secure Transport Module: Dedicated class for DefaultSSTRequestProcessor\'s Remote invocation attributes'],
        ['atsvc','InvocableActionsService','Actions: Logging for Invocable Actions Service'],
        ['cokvl','CoreOptimizerKV','CoreOptimizer: A Core Optimizer Key value logger for use in between release, and other adhoc logging'],
        ['cosjb','ScrutinyBackgroundJob','CoreOptimizer: Logging for scrutiny background jobs.'],
        ['cocod','CoreOptimizerDecisions','CoreOptimizer: Core Optimizer decisions'],
        ['corec','CoreOptimizerRecommender','CoreOptimizer: Recommender for Custom Indexes and Native Skinny indexes'],
        ['szsea','SetupSearch','Setup Search: Setup Search Result page logs going to, and navigating within the setup search page'],
        ['szclk','SetupSearchClick','Setup Search: Setup Search Result Page clicks out of the setup search to edit/detail pages '],
        ['snade','SecurityAnalyticsAbuseDetection','Security Analytics: Log line written when abuse is detected for an event.'],
        ['sneve','SecurityAnalyticsEventProcessing','Security Analytics: Log line written for an event that is processed by SA.'],
        ['sntrs','SecurityAnalyticsTrust','Security Analytics: Security Trust Log Line'],
        ['lscnv','LeadConvert','Leads: Lead Convert Logs'],
        ['mkact','MarketingAction','Marketing Entities: Marketing Actions'],
        ['mkres','MarketingResource','Marketing Entities: Marketing Resources'],
        ['20vfm','VisualforceMap','Location Based Services: Logs for the Visualforce Maps'],
        ['20smv','StaticMapView','Location Based Services: Static Map View'],
        ['20jsh','MapsJavascriptHandler','Location Based Services: Maps Javascript Handler Servlet'],
        ['20our','MapsUsageReport','Location Based Services: Weekly Maps Usage Report'],
        ['pabas','PathAssistant','Path Assistant: PathAssistant Logs'],
        ['pasrv','PathAssistantService','Path Assistant: PathAssistant Service Logs'],
        ['wtcwe','CustomWalkthroughError','Walkthrough: Custom walkthrough execution errors'],
        ['wtwtp','WalkthroughPlayer','Walkthrough: End user activity related to walkthrough starts, stops, and failures.'],
        ['swwiz','SetupWizard','Setup Wizard: Setup Wizard'],
        ['cosis','SqlIdToSoqlOrFilterIdOrReportId','CoreOptimizer: A core optimizer logger component to log soql|filter_id|report_id through it, and sql id of the sql(s) generated by it.'],
        ['colog','CoreOptimizerCommon','CoreOptimizer: A core optimizer logger component to add adhoc log for debug purposes.'],
        ['cordo','CoreOptimizerReadOnly','CoreOptimizer: A core optimizer logger component to log readonly database usage.'],
        ['coroq','CoreOptimizerReadOnlyQuery','CoreOptimizer: Logs phoenix queries run for read only app mode.'],
        ['s0dia','PlatformCache','PlatformCache: Per request Session or Org Cache diagnostics'],
        ['s0dbg','PlatformCacheDebug','PlatformCache: Platform Cache debug loglines'],
        ['s0scr','SessionCacheScrutiny','PlatformCache: Session Cache scrutiny failure'],
        ['s0opr','PlatformCacheOperation','PlatformCache: Platform Cache operations(put,get) loglines.'],
        ['waupg','GoalUpgrade','Work.com Align Goal Migration: Progress and error logs for Goal Migration'],
        ['iqact','ActivityIq','Activity IQ Logger: Activity IQ Log records'],
        ['lperr','SetupAssistantError','New Customer Experience Learning Path aka Setup Assistant aka Getting Started: Error logs for the setupAssistant feature'],
        ['lpmdl','SetupAssistantModal','New Customer Experience Learning Path aka Setup Assistant aka Getting Started: Logs for the SetupAssistantOverlayDialog'],
        ['lplpl','SetupAssistantLandingPageLoad','New Customer Experience Learning Path aka Setup Assistant aka Getting Started: Log for the Setup Assistant landing page'],
        ['lpstp','SetupAssistantStep','New Customer Experience Learning Path aka Setup Assistant aka Getting Started: Log for the Setup Assistant landing page'],
        ['lpprg','SetupAssistantProgress','New Customer Experience Learning Path aka Setup Assistant aka Getting Started: Log for the Setup Assistant landing page'],
        ['qiful','QuickImporterFileUpload','New Customer Experience Data Importer aka Quick Importer: Log for uploaded file, pre-import'],
        ['qifim','QuickImporterFileImport','New Customer Experience Data Importer aka Quick Importer: Log for file actually being imported.'],
        ['qires','QuickImporterResult','New Customer Experience Data Importer aka Quick Importer: Log for a successful import.'],
        ['qipmi','QuickImporterPreMappedImport','New Customer Experience Data Importer aka Quick Importer: An import of a data source that has pre-determined mappings and therefore skips the mapping screen.'],
        ['qiscl','QuickImporterSourceClick','New Customer Experience Data Importer aka Quick Importer: Tracks when a user clicks on a source in the AccountsAndContacts screen. Happens prior to the file upload.'],
        ['evpub','EventServicePublication','Event Service: Event publication'],
        ['evsub','EventServiceSubscription','Event Service: Event subscription'],
        ['evlsb','EventServiceListenerSubscription','Event Service: Event listener subscription'],
        ['evdlv','EventServiceDelivery','Event Service: Event delivery'],
        ['evtrx','EventServiceTransaction','Event Service: Event service log record group transaction marker'],
        ['etenq','LogForwarderService','ExactTarget Adoption Manager: Publishing / Enqueuing log data to the Message Queue for shipment to ExactTarget for User Success Journeys'],
        ['etdeq','LoggingItemHandler','ExactTarget Adoption Manager: Upsert / Dequeuing log data from the Message Queue to ship to ExactTarget for User Success Journeys'],
        ['etcon','ExactTargetConnection','ExactTarget Adoption Manager: Logging for ExactTarget connection.'],
        ['eterr','LoggingItemHandlerErr','ExactTarget Adoption Manager: Errors received from connecting or upserting to ExactTarget Marketing Cloud'],
        ['thenq','ThunderLogForwarderService','Adoption Manager - Thunder: Publishing / Enqueuing log data to the Message Queue for shipment to Thunder for Adoption Manager'],
        ['thdeq','ThunderLoggingItemHandler','Adoption Manager - Thunder: Upsert / Dequeuing log data from the Message Queue to ship to Thunder for Adoption Manager'],
        ['thcon','ThunderConnection','Adoption Manager - Thunder: Logging for Thunder connection.'],
        ['therr','ThunderLoggingItemHandlerErr','Adoption Manager - Thunder: Errors received from connecting or upserting to Thunder'],
        ['avall','Activity','Activities (Task and Event): Log data for activities'],
        ['avarc','ActivityArchiving','Activities (Task and Event): Logging for Activity archiving job'],
        ['avata','ActivityTimelineApi','Activities (Task and Event): Logging for Activity Timeline API calls'],
        ['ppbch','BaseCustomMetadataRequest','CustomPlatform: Base log line for custom metadata cache and query. Treat as an abstract class.'],
        ['ppdbl','CustomMetadataInfoDbLoad','CustomPlatform: Load of a custom metadata type cache from the db.'],
        ['ppsfc','CustomMetadataSerFormatConversion','CustomPlatform: Conversion of a custom metadata type cache to or from a serializable format.'],
        ['ppcmi','CustomMetadataInfoRetrieve','CustomPlatform: Retrieval, by any means, of a custom metadata type cache object.'],
        ['ppinv','CustomMetadataInfoInvalidate','CustomPlatform: Invalidation of a custom metadata type cache.'],
        ['ppget','CustomMetadataCatalogFilter','CustomPlatform: Application of a filter column to a custom metadata type catalog table.'],
        ['ppsoq','CustomMetadataSoqlQuery','CustomPlatform: End-to-end execution of SOQL against a custom metadata type catalog table.'],
        ['vcsge','VcsAbstractLogLine','Platform Version Control: All vcs log lines have these fields - consider abstract'],
        ['vcsin','VcsInitLogLine','Platform Version Control: Repository initialization logging'],
        ['vcsop','VcsOperationLogLine','Platform Version Control: Vcs operation (for ex commit, reset etc) logging'],
        ['imold','OldImporter','Old Import Tools: Log for tracking user click events for Old Importer.'],
        ['aqbas','AsyncQueryBasic','AsyncQuery: Common log params for AsyncQuery'],
        ['aqpar','AsyncQueryParser','AsyncQuery: Log params for AsyncQuery parser'],
        ['aqapi','AsyncQueryAPI','AsyncQuery: Log parms for async api'],
        ['aqjob','AsyncQueryJob','AsyncQuery: Log parms for async api job'],
        ['aqgfe','AsyncQueryGridforce','AsyncQuery: Log parms async query gridforce execution'],
        ['drlay','DescribeLayoutResult','DescribeResult: logtype for Describe Layout Result'],
        ['dcnac','NewsApiCall','DataDotCom: log for a single api call to a Cooper News API'],
        ['dcnaa','NewsRetrieveArticleAPI','DataDotCom: sublog for the Cooper News Retrieve API that logs per-article information'],
        ['wicom','WitsCommon','Wits: Logging related to Wits operations'],
        ['wicac','WitsCache','Wits: Logging related to Wits cache'],
        ['oawaa','WordAppAccess','Office Apps: Word app access log'],
        ['oawal','WordAppLookup','Office Apps: Word app lookup log'],
        ['oawaf','WordAppFieldInsert','Office Apps: Word app mail merge field insert log'],
        ['dcnjt','NewsAlertsJob','DataDotCom: log for news alerts job tracker '],
        ['dcnag','NewsAlertGenerated','DataDotCom: log line written for each news alert created'],
        ['pgdsp','PerOrgDispatch','Per-Org Jobs: Per-org dispatcher'],
        ['pgwrk','PerOrgWorker','Per-Org Jobs: Per-org worker'],
        ['axgrp','ApexGrep','Apex Execution: Apex Codebase Grep'],
        ['gegel','GenericEntityLogger','Generic Entity Logger: Generic Entity Insert/Edit/Delete Logs'],
        ['exreb','RenderEmailTemplateBody','Email Template Processing: Render a text body for who what merge fields'],
        ['tclog','RealTimeTracing','Real Time Tracing: Logs for real time tracing system.'],
        ['vohnd','VoiceCallHandler','Voice logger: Logging related to Voice Call handler servlet']
    ];
    
    var selectedText = clickData.selectionText;
    
    var arrayResult;
    
    for( var i = 0, len = recordTypeArray.length; i < len; i++ ) {
        if( recordTypeArray[i][0] === selectedText ) {
            arrayResult1 = recordTypeArray[i][0];
            arrayResult2 = recordTypeArray[i][1];
            arrayResult3 = recordTypeArray[i][2];
            arrayResultStr1 = "You searched for: <b>" + arrayResult1 + "</b>";
            arrayResultStr2 = "<b>" + arrayResult1 + ":</b> " + arrayResult2 + "<br/>" + arrayResult3;
            break;
        } else {
            //arrayResultStr1 = "You searched for: " + arrayResult1;
            arrayResultStr1 = "<b>" + selectedText + "</b> was not found in Splunk resources.";
            arrayResultStr2 = "'" + selectedText + "' was not found in Splunk resources.";
        }
    }

    var codeSnippit = 'document.write("' 
    + '<html><head><title>Performance Splunk Resources</title><style type=\'text/css\'>html { overflow: hidden; }</style></head><body style=\'font-family: Roboto,Droid,Helvetica Neue,Helvetica,Arial,sans-serif; font-size: 12px; line-height: 16px;\' bgcolor=\'#0070d2\'><div style=\'width: 380px; height: 200px; color:white; padding: 0px 2px 0px 2px;\'>' 
    + '<span style=\'padding-left: 4px;\'>' + arrayResultStr1 + '</span>' 
    + '<div style=\'display: table; background-color:white; color: black; width:97.5%; height:89.5%; margin-top: 5px; padding: 5px 5px 5px 5px; border-radius: 5px;\'>' 
    + arrayResultStr2 
    + '<div id=\'closeDiv\' style=\'display: table-row; vertical-align: bottom; height: 33px;\'><center><button type=\'button\'onclick=\'window.close();\'>Close</button></center></div>' 
    + '</div></div></body></html>'
    + '");';
    
    chrome.windows.create({
    url : "http://google.com",
    focused : true,
    type : "popup",
    height: 240, 
    width:400
    }, function(newWindow) {
        console.log(newWindow);
            
        chrome.tabs.executeScript(newWindow.tabs[0].id, {
           code: codeSnippit
        });
    });
    
};